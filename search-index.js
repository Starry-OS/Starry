var searchIndex = new Map(JSON.parse('[\
["arceos_api",{"t":"PPPGIPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNCCNNNNNCNCCCCCCCNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSFNNHHNNNNOONNONNNNNOIFFIFIIFGPPPPPPPKPPPNNNNNNNNNNNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNONNNNOHHFFNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHFFNNNNHHHHHHHHHNNNNNNNNNNNNNNNNIH","n":["AddrInUse","Again","AlreadyExists","AxError","AxResult","BadAddress","BadState","Busy","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","Err","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","ResourceBusy","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_any","as_any_mut","as_str","borrow","borrow_mut","clone","clone_into","code","config","display","eq","fmt","fmt","from","from","fs","into","io","mem","net","stdio","sys","task","time","to_owned","to_string","try_from","try_from","try_into","type_id","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS","AxDisplayInfo","as_any","as_any_mut","ax_framebuffer_flush","ax_framebuffer_info","borrow","borrow_mut","clone","clone_into","fb_base_vaddr","fb_size","fmt","from","height","into","to_owned","try_from","try_into","type_id","width","AxDirEntry","AxDirHandle","AxDisk","AxFileAttr","AxFileHandle","AxFilePerm","AxFileType","AxOpenOptions","AxSeekFrom","BlockDevice","CharDevice","Current","Dir","End","Fifo","File","MyFileSystemIf","Socket","Start","SymLink","append","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ax_create_dir","ax_current_dir","ax_file_attr","ax_flush_file","ax_open_dir","ax_open_file","ax_read_dir","ax_read_file","ax_read_file_at","ax_remove_dir","ax_remove_file","ax_rename","ax_seek_file","ax_set_current_dir","ax_truncate_file","ax_write_file","ax_write_file_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_new","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","new_myfs","position","read","read_offset","read_one","set_position","size","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write_offset","write_one","AxPollState","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","readable","to_owned","try_from","try_into","type_id","writable","ax_alloc","ax_dealloc","AxTcpSocketHandle","AxUdpSocketHandle","as_any","as_any","as_any_mut","as_any_mut","ax_dns_query","ax_poll_interfaces","ax_tcp_accept","ax_tcp_bind","ax_tcp_connect","ax_tcp_listen","ax_tcp_peer_addr","ax_tcp_poll","ax_tcp_recv","ax_tcp_send","ax_tcp_set_nonblocking","ax_tcp_shutdown","ax_tcp_socket","ax_tcp_socket_addr","ax_udp_bind","ax_udp_connect","ax_udp_peek_from","ax_udp_peer_addr","ax_udp_poll","ax_udp_recv","ax_udp_recv_from","ax_udp_send","ax_udp_send_to","ax_udp_set_nonblocking","ax_udp_socket","ax_udp_socket_addr","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ax_console_read_byte","ax_console_write_bytes","ax_console_write_fmt","ax_terminate","AxTaskHandle","AxWaitQueueHandle","as_any","as_any","as_any_mut","as_any_mut","ax_current_task_id","ax_exit","ax_set_current_priority","ax_sleep_until","ax_spawn","ax_wait_for_exit","ax_wait_queue_wait","ax_wait_queue_wake","ax_yield_now","borrow","borrow","borrow_mut","borrow_mut","from","from","id","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","AxTimeValue","ax_current_time"],"q":[[0,"arceos_api"],[60,"arceos_api::config"],[86,"arceos_api::display"],[106,"arceos_api::fs"],[213,"arceos_api::io"],[230,"arceos_api::mem"],[232,"arceos_api::net"],[278,"arceos_api::stdio"],[281,"arceos_api::sys"],[282,"arceos_api::task"],[313,"arceos_api::time"],[315,"core::any"],[316,"axerrno"],[317,"core::fmt"],[318,"core::result"],[319,"capability"],[320,"alloc::string"],[321,"arceos_api::imp::fs"],[322,"axfs_vfs"],[323,"alloc::sync"],[324,"driver_common"],[325,"core::alloc::layout"],[326,"core::ptr::non_null"],[327,"core::option"],[328,"core::net::ip_addr"],[329,"alloc::vec"],[330,"arceos_api::imp::net"],[331,"core::net::socket_addr"],[332,"arceos_api::imp::task"],[333,"core::ops::function"],[334,"core::marker"],[335,"core::time"],[336,"axconfig::config"],[337,"axconfig"],[338,"axfs::fs::myfs"]],"i":[2,2,2,0,0,2,2,2,2,2,2,15,2,2,2,2,2,2,2,2,2,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,0,2,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,53,53,24,53,24,53,53,0,53,24,53,14,25,16,18,24,14,25,16,18,24,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,16,18,24,14,25,16,18,24,14,24,14,24,14,14,14,24,24,14,25,16,18,24,14,25,16,18,24,14,25,14,54,25,14,25,25,25,25,24,14,14,25,16,18,24,14,25,16,18,24,14,25,16,18,24,14,14,25,25,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,36,39,36,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,39,36,39,36,39,36,39,36,39,36,39,36,39,0,0,0,0,0,0,45,48,45,48,0,0,0,0,0,0,0,0,0,45,48,45,48,45,48,45,45,48,48,45,48,45,48,45,48,0,0],"f":"``````````````````````````````{cb{}}0{df}{ce{}{}}0{dd}{{ce}h{}{}}{dj}``{{dd}l}{{dn}{{Ab{hA`}}}}0{Add}{cc{}}`7```````7{cAf{}}{j{{Ab{d}}}}{c{{Ab{e}}}{}{}}0{cAh{}}```````````````````````````=={{}h}{{}Aj}=={AjAj}<``{{Ajn}{{Ab{hA`}}}}8`??554`````````````````````{{All}h}{cb{}}000000000{fAn}{{}{{An{Af}}}}{B`{{An{Bb}}}}{B`An}{{fAl}{{An{Bd}}}}{{fAl}{{An{B`}}}}{{Bd{Bh{Bf}}}{{An{Bj}}}}{{B`{Bh{Bl}}}{{An{Bj}}}}{{B`Bn{Bh{Bl}}}{{An{Bj}}}}88{{ff}An}{{B`C`}{{An{Bn}}}}:{{B`Bn}An}43{ce{}{}}000000000{C`C`}{AlAl}{{ce}h{}{}}0{{All}h}0{{C`C`}l}{{C`n}{{Ab{hA`}}}}{{Aln}{{Ab{hA`}}}}{cc{}}000088888{{}Cb}{{}Al}{Cb{{Cf{Cd}}}}{CbBn}8{{CbBj}{{Ch{Bl}}}}{{Cb{Bh{Bl}}}{{Ab{BjCj}}}}{{CbBn}h}3??;{c{{Ab{e}}}{}{}}000000000{cAh{}}0000={{CbBj{Bh{Bl}}}{{Ab{BjCj}}}}4`{cb{}}0{ce{}{}}0{ClCl}{{ce}h{}{}}{{}Cl}{{Cln}{{Ab{hA`}}}}{cc{}}5`5998`{Cn{{Db{{D`{Bl}}}}}}{{{D`{Bl}}Cn}h}``8888{f{{An{{Df{Dd}}}}}}{{}An}{Dh{{An{{Dl{DhDj}}}}}}{{DhDj}An}0{{DhBj}An}{Dh{{An{Dj}}}}{Dh{{An{Cl}}}}{{Dh{Bh{Bl}}}{{An{Bj}}}}0{{Dhl}An}{DhAn}{{}Dh}5{{DnDj}An}0{{Dn{Bh{Bl}}}{{An{{Dl{BjDj}}}}}}{Dn{{An{Dj}}}}{Dn{{An{Cl}}}}{{Dn{Bh{Bl}}}{{An{Bj}}}}30{{Dn{Bh{Bl}}Dj}{{An{Bj}}}}{{Dnl}An}{{}Dn}5{ce{}{}}000{cc{}}011{c{{Ab{e}}}{}{}}000{cAh{}}0{{}{{Db{Bl}}}}{{{Bh{Bl}}}{{An{Bj}}}}{E`Eb}{{}Ed}``{cb{}}000{{}Bn}{jEd}{EfAn}{Ehh}{{cAfBj}Ej{ElEn}}{Ej{{Db{j}}}}{{F`c{Db{Fb}}}l{{Ff{}{{Fd{l}}}}}}{{F`Fh}h}{{}h}{ce{}{}}000{cc{}}0{EjBn}22{{}F`}{c{{Ab{e}}}{}{}}000{cAh{}}0`{{}Eh}","D":"AIj","p":[[10,"Any",315],[6,"AxError",0,316],[1,"str"],[1,"unit"],[1,"i32"],[1,"bool"],[5,"Formatter",317],[5,"Error",317],[6,"Result",318],[5,"CapError",319],[5,"String",320],[5,"TypeId",315],[5,"AxDisplayInfo",86],[5,"AxOpenOptions",106],[8,"AxResult",0,316],[5,"AxFileHandle",106,321],[8,"AxFileAttr",106],[5,"AxDirHandle",106,321],[8,"AxDirEntry",106],[1,"slice"],[1,"usize"],[1,"u8"],[1,"u64"],[6,"AxSeekFrom",106],[5,"AxDisk",106],[10,"VfsOps",322],[5,"Arc",323],[1,"array"],[6,"DevError",324],[5,"AxPollState",213],[5,"Layout",325],[5,"NonNull",326],[6,"Option",327],[6,"IpAddr",328],[5,"Vec",329],[5,"AxTcpSocketHandle",232,330],[6,"SocketAddr",331],[1,"tuple"],[5,"AxUdpSocketHandle",232,330],[5,"Arguments",317],[8,"Result",317],[1,"never"],[1,"isize"],[8,"AxTimeValue",313],[5,"AxTaskHandle",282,332],[10,"FnOnce",333],[10,"Send",334],[5,"AxWaitQueueHandle",282,332],[5,"Duration",335],[17,"Output"],[10,"Fn",333],[1,"u32"],[8,"AxFileType",106],[10,"MyFileSystemIf",106]],"r":[[3,316],[4,316],[60,336],[61,336],[62,336],[63,336],[64,336],[65,336],[66,336],[67,336],[68,336],[69,336],[70,336],[71,337],[72,336],[73,336],[74,336],[75,336],[76,336],[77,336],[78,336],[79,336],[80,336],[81,336],[82,336],[83,337],[84,336],[85,336],[107,321],[110,321],[122,338],[232,330],[233,330],[282,332],[283,332]],"b":[[41,"impl-Display-for-AxError"],[42,"impl-Debug-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAG4AFQAfAAEAIgADACkAAwA3AAUAWAABAFwAAwBiAAAAZgADAIAACQCbAA0AqwACAMEAAQDEAA4A1wAHAOIAAwDrAAMACQEDABEBBQAdAQMAKgEDADQBBQA="}],\
["arceos_posix_api",{"t":"CCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOOOFOOOOOOOOOFUNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNIUIFOOOFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFUFIIINNNNNNNNNNNNNNNNNNNNNNOOFOIIIFUFFIOOOOOIFOOOOIOOOOOOOOOOOIOFFFFIOIOOOOOOOOOOOOOFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOI","n":["config","ctypes","sys_accept","sys_bind","sys_clock_gettime","sys_close","sys_connect","sys_dup","sys_dup2","sys_dup3","sys_epoll_create","sys_epoll_ctl","sys_epoll_wait","sys_exit","sys_fcntl","sys_freeaddrinfo","sys_fstat","sys_getaddrinfo","sys_getcwd","sys_getpeername","sys_getpid","sys_getrlimit","sys_getsockname","sys_listen","sys_lseek","sys_lstat","sys_nanosleep","sys_open","sys_pipe","sys_pthread_create","sys_pthread_exit","sys_pthread_join","sys_pthread_mutex_init","sys_pthread_mutex_lock","sys_pthread_mutex_unlock","sys_pthread_self","sys_read","sys_recv","sys_recvfrom","sys_rename","sys_sched_yield","sys_select","sys_send","sys_sendto","sys_setrlimit","sys_shutdown","sys_socket","sys_stat","sys_sysconf","sys_write","sys_writev","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETSIG","F_LOCK","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_SETSIG","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","MAXADDRS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_EXEC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SEARCH","O_SYNC","O_TMPFILE","O_TRUNC","O_TTY_INIT","O_WRONLY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_UIO_MAXIOV","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__attr","__i","__in6_union","__l","__s","__s6_addr","__s6_addr16","__s6_addr32","__ss_align","__ss_padding","__u","__vi","addrinfo","ai","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aibuf","aibuf_sa","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dev_t","epoll_data","epoll_data_t","epoll_event","events","fd","fd","fd_set","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gid_t","in6_addr","in6_addr__bindgen_ty_1","in_addr","in_addr_t","in_port_t","ino_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","lock","mode_t","nlink_t","off_t","pthread_attr_t","pthread_attr_t__bindgen_ty_1","pthread_mutex_t","pthread_mutexattr_t","pthread_t","ptr","ptr","ref_","rlim_cur","rlim_max","rlim_t","rlimit","s_addr","sa","sa_data","sa_family","sa_family_t","sin","sin6","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size_t","slot","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","socklen_t","ss_family","ssize_t","st_atime","st_blksize","st_blocks","st_ctime","st_dev","st_gid","st_ino","st_mode","st_mtime","st_nlink","st_rdev","st_size","st_uid","stat","time_t","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_","u32_","u64_","u64_","uid_t"],"q":[[0,"arceos_posix_api"],[51,"arceos_posix_api::config"],[77,"arceos_posix_api::ctypes"],[825,"core::ffi"],[826,"core::any"],[827,"core::fmt"],[828,"core::net::socket_addr"],[829,"core::time"],[830,"core::result"],[831,"arceos_posix_api::imp::net"],[832,"arceos_posix_api::imp::time"],[833,"arceos_posix_api::imp::fd_ops"],[834,"arceos_posix_api::imp::io_mpx::epoll"],[835,"arceos_posix_api::imp::task"],[836,"arceos_posix_api::imp::fs"],[837,"arceos_posix_api::imp::resources"],[838,"arceos_posix_api::imp::pipe"],[839,"arceos_posix_api::imp::pthread"],[840,"arceos_posix_api::imp::pthread::mutex"],[841,"arceos_posix_api::imp::io"],[842,"arceos_posix_api::imp::io_mpx::select"],[843,"arceos_posix_api::imp::sys"],[844,"axconfig::config"],[845,"axconfig"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,39,34,23,39,35,35,35,31,31,19,39,0,37,9,9,9,9,9,9,9,9,0,0,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,0,0,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,0,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,6,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,0,0,0,0,6,47,40,0,26,2,31,32,33,9,27,5,23,24,13,26,11,29,2,31,32,33,33,34,35,36,9,37,38,27,27,5,5,23,24,19,39,40,6,13,26,11,29,0,0,0,0,0,0,0,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,29,29,0,37,0,0,0,0,0,0,0,0,47,40,37,13,13,0,0,32,37,2,2,0,38,38,36,36,36,36,36,33,33,33,33,0,37,0,0,0,0,0,31,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,5,27,5,27,2,31,32,33,34,35,36,9,37,38,27,5,23,24,19,39,40,6,13,26,11,29,47,40,47,40,0],"f":"``{{bdf}b}0{{hj}b}{bb}20{{bb}b}{{bbb}b}2{{bbbl}b}{{blbb}b}{bn}{{bbA`}b}{AbAd}{{bAf}b}{{AhAhAbAb}b}{{AhA`}Ah}<{{}b}{{bAj}b}>;{{bAlb}Al}{{AhAf}An}{{jj}b}{{AhbB`}b}{{{Bb{b}}}b}{{BdBf{Bl{Bh}{{Bj{Bh}}}}Bh}b}{Bhn}{{BdBh}b}{{BnC`}b}{Bnb}0{{}Bd}{{bBhA`}An}{{bBhCbb}An}{{bBhCbbdf}An}{{AhAh}b}{{}b}{{bCdCdCdCf}b}43{{bAj}b}{{bb}b}{{bbb}b}{{AhAf}b}{bCh}:{{bCjb}An}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{cCl{}}0000000000000000000000000000000000000000000``{ce{}{}}0000000000000000000000000000000000000000000`{dd}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{AbAb}{DjDj}{DlDl}{CfCf}{jj}{BnBn}{C`C`}{BfBf}{DnDn}{E`E`}{ll}{AjAj}{CdCd}{AfAf}{CjCj}{{ce}Ad{}{}}000000000000000000000`{{}d}{{}Cn}{{}D`}{{}Db}{{}Dd}{{}Df}{{}Dh}{{}Ab}{{}Dj}{{}Dl}{{}Cf}{{}j}{{}Bn}{{}C`}{{}Bf}{{}Dn}{{}E`}{{}l}{{}Aj}{{}Cd}{{}Af}{{}Cj}`````````{{dEb}Ed}{{CnEb}Ed}{{D`Eb}Ed}{{DbEb}Ed}{{AbEb}Ed}{{CfEb}Ed}{{jEb}Ed}{{BnEb}Ed}{{C`Eb}Ed}{{AjEb}Ed}{{CdEb}Ed}{{AfEb}Ed}{{CjEb}Ed}{cc{}}00{EfDb}1111111{EhCf}22{Ehj}3333333333```````{ce{}{}}000000000000000000000`````````````````````````````````````````````````````````````0000000000000000000000{c{{Ej{e}}}{}{}}0000000000000000000000000000000000000000000````{cEl{}}000000000000000000000`````","D":"Od","p":[[8,"c_int",825],[5,"sockaddr",77],[8,"socklen_t",77],[8,"clockid_t",77],[5,"timespec",77],[5,"epoll_event",77],[1,"never"],[1,"usize"],[5,"addrinfo",77],[1,"unit"],[5,"stat",77],[8,"c_char",825],[5,"rlimit",77],[8,"off_t",77],[8,"ssize_t",77],[8,"mode_t",77],[1,"slice"],[8,"pthread_t",77],[5,"pthread_attr_t",77],[6,"c_void",825],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",77],[5,"pthread_mutexattr_t",77],[8,"size_t",77],[5,"fd_set",77],[5,"timeval",77],[8,"c_long",825],[5,"iovec",77],[10,"Any",826],[5,"sockaddr_storage",77],[5,"in_addr",77],[5,"sockaddr_in",77],[5,"in6_addr",77],[20,"in6_addr__bindgen_ty_1",77],[5,"sockaddr_in6",77],[5,"aibuf",77],[20,"aibuf_sa",77],[20,"pthread_attr_t__bindgen_ty_1",77],[20,"epoll_data",77],[5,"Formatter",827],[8,"Result",827],[5,"SocketAddrV4",828],[5,"Duration",829],[6,"Result",830],[5,"TypeId",826],[8,"epoll_data_t",77]],"r":[[2,831],[3,831],[4,832],[5,833],[6,831],[7,833],[8,833],[9,833],[10,834],[11,834],[12,834],[13,835],[14,833],[15,831],[16,836],[17,831],[18,836],[19,831],[20,835],[21,837],[22,831],[23,831],[24,836],[25,836],[26,832],[27,836],[28,838],[29,839],[30,839],[31,839],[32,840],[33,840],[34,840],[35,839],[36,841],[37,831],[38,831],[39,836],[40,835],[41,842],[42,831],[43,831],[44,837],[45,831],[46,831],[47,836],[48,843],[49,841],[50,841],[51,844],[52,844],[53,844],[54,844],[55,844],[56,844],[57,844],[58,844],[59,844],[60,844],[61,844],[62,845],[63,844],[64,844],[65,844],[66,844],[67,844],[68,844],[69,844],[70,844],[71,844],[72,844],[73,844],[74,845],[75,844],[76,844]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL8CBgBOABcCaQIAAHECAAB0AgAAfwIGAJwCnQA="}],\
["arch_boot",{"t":"H","n":["current_boot_stack"],"q":[[0,"arch_boot"]],"i":[0],"f":"{{}b}","D":"d","p":[[1,"u8"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axalloc",{"t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNONNNNNNNNNNNN","n":["GlobalAllocator","GlobalPage","PhysPage","add_memory","alloc","alloc","alloc","alloc","alloc_contiguous","alloc_contiguous","alloc_pages","alloc_zero","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_slice","as_slice","as_slice_mut","as_slice_mut","available_bytes","available_pages","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dealloc","dealloc","dealloc_pages","drop","drop","fill","fill","fmt","fmt","from","from","from","global_add_memory","global_allocator","global_init","init","into","into","into","name","new","size","start_paddr","start_vaddr","start_vaddr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","used_bytes","used_pages","zero"],"q":[[0,"axalloc"],[65,"allocator"],[66,"core::alloc::layout"],[67,"core::ptr::non_null"],[68,"axalloc::page"],[69,"axerrno"],[70,"core::option"],[71,"alloc::vec"],[72,"core::fmt"],[73,"memory_addr"],[74,"core::ops::function"],[75,"core::result"],[76,"core::any"]],"i":[0,0,0,1,1,1,7,9,7,9,1,7,7,9,7,9,7,9,7,9,1,1,1,7,9,1,7,9,1,1,1,7,9,7,9,7,9,1,7,9,0,0,0,1,1,7,9,1,1,7,7,7,9,1,7,9,1,7,9,1,7,9,1,1,7],"f":"```{{bdd}f}{{bh}j}{{bh}{{f{{l{j}}}}}}{{}{{A`{n}}}}{{}{{A`{Ab}}}}{{dd}{{A`{n}}}}{{dd{Af{{Ad{j}}}}}{{A`{{Ah{{Af{Ab}}}}}}}}{{bdd}{{f{d}}}}4{nj}{Abj}10{n{{Ad{j}}}}{Ab{{Ad{j}}}}10{bd}0{ce{}{}}00000{{bjh}Aj}{{b{l{j}}h}Aj}{{bdd}Aj}{nAj}{AbAj}{{nj}Aj}{{Abj}Aj}{{nAl}An}{{AbAl}An}{cc{}}00{{dd}f}{{}b}{{dd}Aj}:==={bB`}2{nd}{{nc}Bb{{Bh{Bd}{{Bf{Bb}}}}}}{nBd}`{c{{Bj{e}}}{}{}}00000{cBl{}}00{bd}0{nAj}","D":"Ej","p":[[5,"GlobalAllocator",0],[1,"usize"],[8,"AllocResult",65],[5,"Layout",66],[1,"u8"],[5,"NonNull",67],[5,"GlobalPage",0,68],[8,"AxResult",69],[5,"PhysPage",0,68],[1,"slice"],[6,"Option",70],[5,"Vec",71],[1,"unit"],[5,"Formatter",72],[8,"Result",72],[1,"str"],[5,"PhysAddr",73],[5,"VirtAddr",73],[17,"Output"],[10,"FnOnce",74],[6,"Result",75],[5,"TypeId",76]],"r":[[1,68],[2,68]],"b":[[4,"impl-GlobalAlloc-for-GlobalAllocator"],[5,"impl-GlobalAllocator"],[28,"impl-GlobalAlloc-for-GlobalAllocator"],[29,"impl-GlobalAllocator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQABQAFAAAAFwAGACAAAQAkAAEANgAIAA=="}],\
["axconfig",{"t":"SSSSSSSSSSSSSSSSSSSSSSSSSS","n":["ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS"],"q":[[0,"axconfig"],[26,"axconfig::config"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````````````````````````","D":"Cf","p":[],"r":[[0,26],[1,26],[2,26],[3,26],[4,26],[5,26],[6,26],[7,26],[8,26],[9,26],[10,26],[12,26],[13,26],[14,26],[15,26],[16,26],[17,26],[18,26],[19,26],[20,26],[21,26],[22,26],[24,26],[25,26]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axdisplay",{"t":"EHHH","n":["DisplayInfo","framebuffer_flush","framebuffer_info","init_display"],"q":[[0,"axdisplay"],[4,"driver_display"],[5,"axdriver::dummy"],[6,"axdriver::structs::imp"]],"i":[0,0,0,0],"f":"`{{}b}{{}d}{{{h{f}}}b}","D":"h","p":[[1,"unit"],[5,"DisplayInfo",4],[8,"AxDisplayDevice",5],[5,"AxDeviceContainer",6]],"r":[[0,4]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],\
["axdriver",{"t":"FIFGIIPPPONNNNNNNNNNNNONNNNNNNHNNNNNOCNNNNNNNNNNPPIIIPKPKPGIGPKPPPPKPPPPMMNNNNMMNNMMNMMMNNNNMNNMMMMMMMMNMNNNNMNNM","n":["AllDevices","AxBlockDevice","AxDeviceContainer","AxDeviceEnum","AxDisplayDevice","AxNetDevice","Block","Display","Net","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","deref","device_model","device_name","device_type","display","from","from","from","from_block","from_display","from_net","from_one","init_drivers","into","into","into","is_empty","len","net","prelude","take_one","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Again","AlreadyExists","AxBlockDevice","AxDisplayDevice","AxNetDevice","BadState","BaseDriverOps","Block","BlockDriverOps","Char","DevError","DevResult","DeviceType","Display","DisplayDriverOps","Err","InvalidParam","Io","Net","NetDriverOps","NoMemory","Ok","ResourceBusy","Unsupported","alloc_tx_buffer","block_size","borrow","borrow","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","device_name","device_type","eq","fb","flush","flush","fmt","fmt","from","from","info","into","into","mac_address","need_flush","num_blocks","read_block","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","to_owned","transmit","try_from","try_from","try_into","try_into","tx_queue_size","type_id","type_id","write_block"],"q":[[0,"axdriver"],[48,"axdriver::prelude"],[113,"axdriver::structs::imp"],[114,"axdriver::structs"],[115,"driver_common"],[116,"driver_block"],[117,"driver_display"],[118,"driver_net"],[119,"core::option"],[120,"core::result"],[121,"core::any"],[122,"core::fmt"]],"i":[0,0,0,0,0,0,4,4,4,2,1,4,2,1,4,2,1,2,1,2,4,4,2,1,4,2,4,4,4,1,0,1,4,2,1,1,2,0,1,1,4,2,1,4,2,1,4,2,15,15,0,0,0,15,0,5,0,5,0,0,0,5,0,26,15,15,5,0,15,26,15,15,8,6,5,15,5,15,8,8,5,5,17,17,5,7,7,6,5,15,5,15,7,5,15,8,7,6,6,8,8,8,8,5,8,5,15,5,15,8,5,15,6],"f":"``````````{ce{}{}}00000{{}{{b{c}}}{}}{{}d}{{{b{c}}}e{}{}}{{}f}{hf}{hj}`{cc{}}00{chl}{chn}{chA`}{c{{b{c}}}{}}9;;;{{{b{c}}}Ab{}}{{{b{c}}}Ad{}}``{{{b{c}}}{{Af{c}}}{}}{c{{Ah{e}}}{}{}}00000{cAj{}}00````````````````````````{{A`Ad}{{Ah{AlAn}}}}{lAd}{ce{}{}}000{A`Ab}0{jj}{{ce}B`{}{}}{Bbf}{Bbj}{{jj}Ab}{nBd}{n{{Ah{B`An}}}}{l{{Ah{B`An}}}}{{jBf}{{Ah{B`Bh}}}}{{AnBf}{{Ah{B`Bh}}}}{cc{}}0{nBj}=={A`Bl}{nAb}{lBn}{{lBn{Cb{C`}}}{{Ah{B`An}}}}{A`{{Ah{AlAn}}}}{{A`Al}{{Ah{B`An}}}}{A`{{Ah{B`An}}}}{A`Ad}{ce{}{}}3{c{{Ah{e}}}{}{}}0002{cAj{}}07","D":"Il","p":[[5,"AxDeviceContainer",0,113],[5,"AllDevices",0],[1,"str"],[6,"AxDeviceEnum",0,114],[6,"DeviceType",48,115],[10,"BlockDriverOps",48,116],[10,"DisplayDriverOps",48,117],[10,"NetDriverOps",48,118],[1,"bool"],[1,"usize"],[6,"Option",119],[6,"Result",120],[5,"TypeId",121],[5,"NetBufPtr",118],[6,"DevError",48,115],[1,"unit"],[10,"BaseDriverOps",48,115],[5,"FrameBuffer",117],[5,"Formatter",122],[5,"Error",122],[5,"DisplayInfo",117],[5,"EthernetAddress",118],[1,"u64"],[1,"u8"],[1,"slice"],[8,"DevResult",48]],"r":[[1,113],[2,113],[3,114],[4,113],[5,113],[50,113],[51,113],[52,113],[54,115],[56,116],[58,115],[59,115],[60,115],[62,117],[67,118]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMACgALAAgAFQABACgACABLAAMAUQABAFUAAABZAAEAaAAAAGoAAwBvAAEA"}],\
["axfeat",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axfs",{"t":"SCEECHPPPPFFPPFPIFFIKFKGPPPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHHNNHNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNHNCHMNNHNNNHNNNHHHNMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNFKTTTFTTPTSSPKKGFPTTTFPPTTTTTTTTTTTPPPPSTSSSTTOONNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNPPPIFFPFPIIIKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BLOCK_SIZE","api","axfs_devfs","axfs_ramfs","fops","init_filesystems","BlockDevice","CharDevice","Current","Dir","DirBuilder","DirEntry","End","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","Read","ReadDir","Seek","SeekFrom","Socket","Start","SymLink","Write","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone_into","clone_into","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","current_dir","default","eq","executable","executable","file_name","file_type","file_type","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_attr","into","into","into","into","into","into","into","into_iter","is_dir","is_file","len","lookup","metadata","metadata","new","new","next","open","open","options","path","path_exists","permissions","port","read","read","read","read","read_dir","read_exact","read_full","read_to_end","read_to_string","read_to_string","readable","recursive","remove_dir","remove_file","rename","rewind","seek","seek","set_current_dir","set_len","set_permissions","size","stream_position","to_owned","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","writable","write","write","write","write","write_all","write_fmt","AccessMode","AsAny","BINARY","CLOEXEC","CREATE","ConsoleWinSize","DIR","DSYNC","DirDesc","EXCLUSIVE","FIOCLEX","FIONBIO","FileDesc","FileExt","FileIO","FileIOType","Kstat","Link","NOCTTY","NOFOLLOW","NON_BLOCK","OpenFlags","Other","Pipe","RDONLY","RDWR","S_IRGRP","S_IROTH","S_IRUSR","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","Socket","Stderr","Stdin","Stdout","TCGETS","TEXT","TIOCGPGRP","TIOCGWINSZ","TIOCSPGRP","TRUNC","WRONLY","_pad0","_pad1","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","creatable","default","default","default","difference","difference","empty","empty","eq","executable","executable","extend","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","get_path","get_stat","get_status","get_type","in_exceptional_conditions","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","ioctl","is_all","is_all","is_close_on_exec","is_dir","is_empty","is_empty","is_hang_up","iter","iter","iter_names","iter_names","new_creatable","not","not","print_content","read","read_from_seek","read_write","readable","readable","readable","ready_to_read","ready_to_write","remove","remove","seek","set","set","set_close_on_exec","set_status","st_atime_nsec","st_atime_sec","st_blksize","st_blocks","st_ctime_nsec","st_ctime_sec","st_dev","st_gid","st_ino","st_mode","st_mtime_nsec","st_mtime_sec","st_nlink","st_rdev","st_size","st_uid","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","writable","writable","writable","write","write_to_seek","BlockDevice","CharDevice","Dir","DirEntry","Directory","Disk","Fifo","File","File","FileAttr","FilePerm","FileType","MyFileSystemIf","OpenOptions","Socket","SymLink","append","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_dir","create_file","create_new","drop","drop","executable","flush","fmt","from","from","from","from","get_attr","into","into","into","into","new","new","new_myfs","open","open_dir","open_dir_at","open_file_at","position","read","read","read_at","read_dir","read_offset","read_one","readable","remove_dir","remove_file","rename","seek","set_position","size","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","writable","write","write","write_at","write_offset","write_one"],"q":[[0,"axfs"],[6,"axfs::api"],[175,"axfs::api::port"],[422,"axfs::fops"],[520,"axdriver::dummy"],[521,"axdriver::structs::imp"],[522,"axfs::api::file"],[523,"core::any"],[524,"alloc::string"],[525,"axerrno"],[526,"axio"],[527,"axfs::api::dir"],[528,"core::result"],[529,"core::fmt"],[530,"axfs_vfs"],[531,"core::option"],[532,"alloc::vec"],[533,"core::convert"],[534,"core::iter::traits::collect"],[535,"bitflags::iter"],[536,"axfs::dev"],[537,"alloc::sync"],[538,"driver_common"],[539,"axfs::fs"],[540,"axfs::fs::myfs"]],"i":[0,0,0,0,0,0,16,16,12,16,0,0,12,16,0,16,0,0,0,0,0,0,0,0,16,12,16,0,4,12,25,15,7,14,13,4,12,25,15,7,14,13,4,7,12,25,15,7,14,13,4,12,25,15,7,14,13,4,0,12,13,4,12,13,4,14,13,4,0,0,13,4,0,14,12,13,13,15,15,7,17,13,12,15,7,14,4,12,25,15,7,14,13,4,13,12,25,15,7,14,13,4,25,7,7,7,0,0,13,14,4,25,13,4,13,15,0,7,0,0,30,13,4,0,30,30,30,0,30,13,14,0,0,0,33,33,13,0,13,7,7,33,12,13,4,13,4,12,25,15,7,14,13,4,12,25,15,7,14,13,4,12,25,15,7,14,13,4,13,0,17,13,4,17,17,0,0,37,37,37,0,37,37,43,37,0,0,43,0,0,0,0,43,37,37,37,0,43,43,37,37,38,38,38,38,38,38,38,38,38,43,43,43,43,0,37,0,0,0,37,37,42,42,37,38,39,42,37,43,38,44,39,42,37,43,38,44,37,38,37,38,37,38,37,38,37,37,38,38,37,38,37,38,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,37,38,37,38,37,42,37,44,37,38,37,38,43,45,46,37,38,46,42,37,37,37,37,37,43,38,38,38,38,42,37,37,43,38,38,44,37,38,37,37,38,38,37,38,37,38,37,38,46,46,46,46,46,37,38,37,38,37,38,42,37,43,38,44,37,38,46,37,38,37,37,37,38,46,37,38,37,38,37,37,38,46,46,45,37,45,46,37,46,46,37,38,46,37,38,46,46,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,37,38,37,38,37,38,42,37,43,38,44,37,38,46,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,37,38,45,46,37,46,45,62,62,62,0,0,0,62,0,62,0,0,0,0,0,62,62,53,56,55,54,53,56,55,54,53,56,55,54,53,56,55,54,53,54,53,54,53,53,55,55,53,55,54,54,54,53,56,55,54,53,54,56,55,54,53,56,53,63,54,55,55,55,56,54,53,54,55,56,56,54,55,55,55,54,56,56,54,53,54,53,56,55,54,53,56,55,54,53,56,55,54,53,54,54,53,54,56,56],"f":"`````{{{d{b}}}f}``````````````````````{{hj}h}{cl{}}0000000000000{nA`}{ce{}{}}0000000000000{Ab{{Af{Ad}}}}{AhAh}{AjAj}{hh}{{ce}f{}{}}00{{AlAb}{{Af{f}}}}{Ab{{Af{Aj}}}}:{Ab{{Af{f}}}}01;{{}{{Af{Ad}}}}{{}Al}{{AhAh}j}{Ajj}0{AnAd}{AnB`}{nB`}{Bb{{Bf{fBd}}}}{Aj{{Af{f}}}}{{AhBh}{{Bf{fBj}}}}{{AnBh}Bl}{{nBh}Bl}{{AlBh}Bl}{{hBh}Bl}{cc{}}000000{Aj{{Af{Bn}}}}{ce{}{}}0000000{nj}0{nA`}{Ab{{Af{C`}}}}{Ab{{Af{n}}}}{Aj{{Af{n}}}}{{}Al}{{}h}{Cb{{Cd{{Af{An}}}}}}{Ab{{Af{Aj}}}}{{hAb}{{Af{Aj}}}}3{AnAd}{Abj}{nCf}`{Ab{{Af{{Cj{Ch}}}}}}{{Cl{Cn{Ch}}}{{Bf{D`Bd}}}}{{Aj{Cn{Ch}}}{{Af{D`}}}}{{hj}h}{Ab{{Af{Cb}}}}{{Cl{Cn{Ch}}}{{Bf{fBd}}}}4{{Cl{Cj{Ch}}}{{Bf{D`Bd}}}}{Ab{{Af{Ad}}}}{{ClAd}{{Bf{D`Bd}}}}{Ajj}{{Alj}Al}{Ab{{Af{f}}}}0{{AbAb}{{Af{f}}}}{Db{{Bf{fBd}}}}{{DbAh}{{Bf{A`Bd}}}}{{AjAh}{{Af{A`}}}}4{{AjA`}{{Af{f}}}}{{nCf}f}{nA`}{Db{{Bf{A`Bd}}}}{ce{}{}}00{{AjD`}{{Af{f}}}}{{hj}h}{c{{Bf{e}}}{}{}}0000000000000{cDd{}}000000?{{Abc}{{Af{f}}}{{Df{{Cn{Ch}}}}}}{{Bb{Cn{Ch}}}{{Bf{D`Bd}}}}{{Aj{Cn{Ch}}}{{Af{D`}}}}5{{Bb{Cn{Ch}}}{{Bf{fBd}}}}{{BbDh}{{Bf{fBd}}}}````````````````````````````````````````````````{{}Dj}{{}Dl}{Dnl}{cl{}}0000100000{{DjDj}Dj}{{DlDl}Dl}{{DjDj}f}{{DlDl}f}3210{DjE`}0{DlEb}05432{ce{}{}}000000000{EdEd}{DjDj}{EfEf}{DlDl}{EhEh}{{ce}f{}{}}000042{{DjDj}j}{{DlDl}j}{Djj}{{}Ed}{{}Dj}{{}Eh}{{DjDj}Dj}{{DlDl}Dl}3{{}Dl}{{EfEf}j}{Ejj}{Elj}{{Djc}f{{F`{}{{En{Dj}}}}}}{{Dlc}f{{F`{}{{En{Dl}}}}}}{El{{Af{f}}}}{{EdBh}Bl}{{DjBh}Bl}0000{{EfBh}Bl}{{DlBh}Bl}000{cc{}}{D`Dj}11{D`Dl}22{E`{{Cd{Dj}}}}{Eb{{Cd{Dl}}}}{E`Dj}0{EbDl}010{cDj{{F`{}{{En{Dj}}}}}}{cDl{{F`{}{{En{Dl}}}}}}{Ab{{Cd{Dj}}}}{Ab{{Cd{Dl}}}}{ElAd}{El{{Af{Ed}}}}{ElDj}{ElEf}{Elj}{{DjDj}f}{{DlDl}f}{{DjDj}Dj}{{DlDl}Dl}{{DjDj}j}{{DlDl}j}{ce{}{}}0000{Djc{}}{Dlc{}}{{ElD`D`}{{Af{Fb}}}}{Djj}{Dlj}1110<{Dj{{Fd{Dj}}}}{Dl{{Fd{Dl}}}}{Dj{{Ff{Dj}}}}{Dl{{Ff{Dl}}}}5{DjDj}{DlDl}{Elf}{{El{Cn{Ch}}}{{Af{D`}}}}{{EjAh{Cn{Ch}}}{{Af{D`}}}}{Dj{{Fh{jj}}}}{Ejj}{Elj}=00{{DjDj}f}{{DlDl}f}{{ElAh}{{Af{A`}}}}{{DjDjj}f}{{DlDlj}f}{{Elj}j}{{ElDj}j}````````````````{{DjDj}Dj}{{DlDl}Dl}8710{ce{}{}}000098{{ElD`}{{Af{f}}}}{c{{Bf{e}}}{}{}}000000000{cDd{}}000054>={Djj}{{El{Cn{Ch}}}{{Af{D`}}}}{{EjAh{Cn{Ch}}}{{Af{D`}}}}````````````````{{Fjj}f}{cl{}}000000088888888{FlFl}{FjFj}{{ce}f{}{}}04{{FnAb}Af}{{FnAb}{{Af{C`}}}}6{Fnf}{Flf}{Flj}{FlAf}{{FjBh}Bl}{cc{}}000{Fl{{Af{Bn}}}}{ce{}{}}000{bG`}{{}Fj}{G`{{Gd{Gb}}}}{{AbFj}{{Af{Fl}}}}{{AbFj}{{Af{Fn}}}}{{FnAbFj}{{Af{Fn}}}}{{FnAbFj}{{Af{Fl}}}}{G`A`}{{Fl{Cn{Ch}}}{{Af{D`}}}}{{Fjj}f}{{FlA`{Cn{Ch}}}{{Af{D`}}}}{{Fn{Cn{Gf}}}{{Af{D`}}}}{{G`D`}{{Gh{Ch}}}}{{G`{Cn{Ch}}}{{Gj{D`}}}}{Flj}{{FnAb}Af}0{{FnAbAb}Af}{{FlAh}{{Af{A`}}}}{{G`A`}f};{ce{}{}}0{{FlA`}Af};{c{{Bf{e}}}{}{}}0000000{cDd{}}0008>=<{{G`D`{Cn{Ch}}}{{Gj{D`}}}}:","D":"BId","p":[[8,"AxBlockDevice",520],[5,"AxDeviceContainer",521],[1,"unit"],[5,"OpenOptions",6,522],[1,"bool"],[10,"Any",523],[5,"Metadata",6,522],[1,"u64"],[1,"str"],[5,"String",524],[8,"AxResult",525],[6,"SeekFrom",6,526],[5,"File",6,522],[5,"DirBuilder",6,527],[5,"DirEntry",6,527],[8,"FileType",6,522],[10,"Write",6,526],[6,"AxError",525],[6,"Result",528],[5,"Formatter",529],[5,"Error",529],[8,"Result",529],[8,"FileAttr",422],[8,"VfsNodeRef",530],[5,"ReadDir",6,527],[6,"Option",531],[8,"Permissions",6,522],[1,"u8"],[5,"Vec",532],[10,"Read",6,526],[1,"slice"],[1,"usize"],[10,"Seek",6,526],[5,"TypeId",523],[10,"AsRef",533],[5,"Arguments",529],[5,"OpenFlags",175],[5,"AccessMode",175],[10,"AsAny",175],[1,"u32"],[1,"u16"],[5,"Kstat",175],[6,"FileIOType",175],[5,"ConsoleWinSize",175],[10,"FileExt",175],[10,"FileIO",175],[17,"Item"],[10,"IntoIterator",534],[1,"isize"],[5,"Iter",535],[5,"IterNames",535],[1,"tuple"],[5,"OpenOptions",422],[5,"File",422],[5,"Directory",422],[5,"Disk",422,536],[10,"VfsOps",530],[5,"Arc",537],[8,"DirEntry",422],[1,"array"],[8,"DevResult",538],[8,"FileType",422],[10,"MyFileSystemIf",422]],"r":[[0,539],[10,527],[11,527],[14,522],[16,522],[17,522],[18,522],[19,522],[20,526],[21,527],[22,526],[23,526],[27,526],[427,536],[434,540]],"b":[[75,"impl-FileExt-for-File"],[76,"impl-File"],[245,"impl-OpenFlags"],[246,"impl-Flags-for-OpenFlags"],[247,"impl-Flags-for-AccessMode"],[248,"impl-AccessMode"],[292,"impl-UpperHex-for-OpenFlags"],[293,"impl-Octal-for-OpenFlags"],[294,"impl-LowerHex-for-OpenFlags"],[295,"impl-Debug-for-OpenFlags"],[296,"impl-Binary-for-OpenFlags"],[298,"impl-Octal-for-AccessMode"],[299,"impl-LowerHex-for-AccessMode"],[300,"impl-Binary-for-AccessMode"],[301,"impl-UpperHex-for-AccessMode"],[311,"impl-Flags-for-OpenFlags"],[312,"impl-OpenFlags"],[313,"impl-Flags-for-AccessMode"],[314,"impl-AccessMode"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL4AIwADAAEAHgANAC0ADQA8AAUASgACAFIABQBnAAAAcAAAAHoAAACCAAAAiQAAAI8AAgCUABUArAAAALoAAQDZAAIA4wAEAOkABAD3AAEA/gATABcBAgAeAQAAJAEKADABAAAzAQAAOAEAADoBAABSAQEAiQEEAJEBDgC4ARMA0AEBANQBAADzAQEA9wELAA=="}],\
["axfutex",{"t":"EEFFFONNNNNNNNNNNNNCNNNNHNNNONNNNOONNNNNNNNNNTTPPPFGPPTPTPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["FUTEXQUEUES","FUTEXQUEUES","FUTEXQUEUES","FutexKey","FutexQ","bitset","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","eq","equivalent","flags","fmt","from","from","from","futex_hash","into","into","into","key","match_key","new","new","partial_cmp","pid","task","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BITSET_MATCH_ANY","CLOCK_REALTIME","CMP_REQUEUE","CMP_REQUEUE_PI","FD","FutexFlags","FutexOp","LOCK_PI","LOCK_PI2","PRIVATE","REQUEUE","SHARED","TRYLOCK_PI","UNLOCK_PI","WAIT","WAIT_BITSET","WAIT_REQUEUE_PI","WAKE","WAKE_BITSET","WAKE_OP","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","complement","contains","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","type_id","type_id","union"],"q":[[0,"axfutex"],[45,"axfutex::flags"],[129,"axfutex::futex"],[130,"core::cmp"],[131,"axfutex::queues"],[132,"core::fmt"],[133,"axtask::api"],[134,"core::option"],[135,"core::result"],[136,"core::any"],[137,"core::iter::traits::collect"],[138,"bitflags::iter"]],"i":[0,0,0,0,0,9,9,1,4,9,1,4,1,1,1,1,4,1,1,0,1,9,1,4,0,9,1,4,9,9,9,1,1,1,9,1,9,1,4,9,1,4,9,1,4,16,16,18,18,18,0,0,18,18,16,18,16,18,18,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,18,16,18,16,18,18,16,16,16,16,18,16,18,16,16,18,16,16,16,16,16,18,16,16,16,16,16,16,16,16,16,16,18,16,16,16,16,16,16,16,16,16,16,16,16,18,16,18,18,16,18,16,18,16,16],"f":"``````{ce{}{}}00000{bb}{{ce}d{}{}}{{bb}f}{{}b}`{{bb}j}{{ce}j{}{}}`{{bl}n}{cc{}}00{bA`}999`{{Abb}j}{{bAdAf}Ab}{{AhA`Af}b}{{bb}{{Aj{f}}}}``={c{{Al{e}}}{}{}}00000{cAn{}}00````````````````````{{}B`}{{B`B`}B`}{{B`B`}d}10{B`Bb}021{ce{}{}}000{BdBd}{{ce}d{}{}}{B`B`}{{B`B`}j}78{{BdBd}j}1{{ce}j{}{}}0{{B`c}d{{Bh{}{{Bf{B`}}}}}}{{Bdl}n}{{B`l}n}0000{cc{}}0{Bb{{Aj{B`}}}}{BbB`}00{cB`{{Bh{}{{Bf{B`}}}}}}{Bj{{Aj{B`}}}}{{B`B`}d}{{B`B`}B`}<{ce{}{}}0{B`c{}}{B`j}0{B`{{Bl{B`}}}}{B`{{Bn{B`}}}}{B`B`}7{{B`B`j}d}78768{Bb{{Al{BdBb}}}}{c{{Al{e}}}{}{}}000{cAn{}}0:","D":"Gj","p":[[5,"FutexKey",0,129],[1,"unit"],[6,"Ordering",130],[5,"FUTEXQUEUES",0,131],[1,"bool"],[5,"Formatter",132],[8,"Result",132],[1,"usize"],[5,"FutexQ",0,129],[8,"AxTaskRef",133],[1,"u32"],[1,"u64"],[6,"Option",134],[6,"Result",135],[5,"TypeId",136],[5,"FutexFlags",45],[1,"i32"],[6,"FutexOp",45],[17,"Item"],[10,"IntoIterator",137],[1,"str"],[5,"Iter",138],[5,"IterNames",138]],"r":[[0,131],[1,131],[2,131],[3,129],[4,129],[24,131]],"b":[[70,"impl-Flags-for-FutexFlags"],[71,"impl-FutexFlags"],[90,"impl-Binary-for-FutexFlags"],[91,"impl-UpperHex-for-FutexFlags"],[92,"impl-Octal-for-FutexFlags"],[93,"impl-Debug-for-FutexFlags"],[94,"impl-LowerHex-for-FutexFlags"],[98,"impl-FutexFlags"],[99,"impl-Flags-for-FutexFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEQAEQABAAEABwAMABUAAAAgAAEAJAAJADAAAgA1AAEAOAAAADoABwBHAAAASwAFAFUAAwBaAAUAZAAAAG0AAAB4AAAAegAGAA=="}],\
["axhal",{"t":"SCCCCCCCCEEEECCFTTTTFFTTTNNNNNNNNNNNONHHOHHNNNNNNNNNNNHONNNOHNNNNNNOOOOOOOOOOOOOOOHHHNOOOONNNNNNNNOHNNNNNNNNNNNOHHHHHHHHHHHHHIHHHTTTFFEETTTETNNNNNNNNNNNNNHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHONOHNNONNNNNNNNNNNHHEEIEFENNNNNNNNNNCCCCCCHHHHCSSHHHHHHHHHHHSSHHHHHHHHHHHFTTSTSTSSSTSITNNNNNNNNNNNNNHHNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNHNNNNNNFNNNNNNNNNN","n":["KERNEL_PROCESS_ID","arch","console","cpu","irq","mem","misc","paging","platform","platform_init","platform_init_secondary","platform_name","set_tss_stack_top","time","tls","GdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","TaskStateSegment","TrapFrame","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","app_init_context","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","default","disable_irqs","enable_irqs","error_code","first_into_user","flush_tlb","fmt","fmt","fmt","from","from","from","get_pc","get_ret_code","get_sp","get_syscall_args","get_syscall_num","halt","interrupt_stack_table","into","into","into","iomap_base","irqs_enabled","is_user","load","load_tss","new","new","pointer","privilege_stack_table","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_page_table_root","read_thread_pointer","read_trapframe_from_kstack","rewind_pc","rflags","rip","rsi","rsp","set_arg0","set_arg1","set_arg2","set_pc","set_ra","set_ret_code","set_tls","set_user_sp","ss","task_context_switch","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vector","wait_for_irqs","write_page_table_root","write_page_table_root0","write_thread_pointer","write_trapframe_to_kstack","getchar","init_early","putchar","write_bytes","init_primary","init_secondary","this_cpu_id","this_cpu_is_bsp","IrqHandler","dispatch_irq","register_handler","set_enable","DEVICE","EXECUTE","FREE","MemRegion","MemRegionFlags","PAGE_SIZE_4K","PhysAddr","READ","RESERVED","UNCACHED","VirtAddr","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear_bss","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","memory_regions","name","not","paddr","phys_to_virt","remove","set","size","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","virt_to_phys","terminate","MappingFlags","PageSize","PageTable","PagingError","PagingIfImpl","PagingResult","alloc_frame","borrow","borrow_mut","dealloc_frame","from","into","phys_to_virt","try_from","try_into","type_id","apic","console","dtables","irq","mem","misc","platform_init","platform_init_secondary","platform_name","set_tss_stack_top","time","MAX_IRQ_COUNT","TIMER_IRQ_NUM","dispatch_irq","local_apic","raw_apic_id","register_handler","set_enable","getchar","init_early","putchar","init_primary","init_secondary","set_tss_stack_top","MAX_IRQ_COUNT","TIMER_IRQ_NUM","dispatch_irq","local_apic","raw_apic_id","register_handler","set_enable","terminate","current_ticks","init_early","nanos_to_ticks","set_oneshot_timer","ticks_to_nanos","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TIMER_IRQ_NUM","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","current_ticks","current_time","current_time_nanos","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","ticks_to_nanos","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","TlsArea","alloc","borrow","borrow_mut","drop","from","into","tls_ptr","try_from","try_into","type_id"],"q":[[0,"axhal"],[15,"axhal::arch"],[117,"axhal::console"],[121,"axhal::cpu"],[125,"axhal::irq"],[129,"axhal::mem"],[205,"axhal::misc"],[206,"axhal::paging"],[222,"axhal::platform"],[233,"axhal::platform::apic"],[240,"axhal::platform::console"],[243,"axhal::platform::dtables"],[246,"axhal::platform::irq"],[253,"axhal::platform::misc"],[254,"axhal::platform::time"],[259,"axhal::time"],[346,"axhal::tls"],[357,"axhal::arch::x86_64::context"],[358,"x86_64::structures::tss"],[359,"memory_addr"],[360,"core::option"],[361,"axhal::arch::x86_64::gdt"],[362,"core::fmt"],[363,"core::result"],[364,"x86_64::structures"],[365,"taskctx::arch::x86_64"],[366,"core::any"],[367,"core::iter::traits::collect"],[368,"bitflags::iter"],[369,"core::iter::traits::iterator"],[370,"x2apic::lapic"],[371,"core::time"],[372,"core::cmp"],[373,"core::hash"],[374,"axhal::platform::x86_pc"],[375,"axhal::platform::x86_pc::dtables"],[376,"axhal::arch::x86_64"],[377,"axhal::platform::x86_pc::uart16550"],[378,"axhal::platform::x86_pc::apic"],[379,"axhal::platform::x86_pc::misc"],[380,"page_table_entry"],[381,"page_table"],[382,"axhal::platform::x86_pc::time"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,7,7,7,2,7,2,3,7,2,3,2,3,2,3,2,2,0,0,2,0,0,7,2,3,7,2,3,2,2,2,2,2,0,3,7,2,3,3,0,2,7,7,7,3,7,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,3,7,2,3,7,2,3,7,2,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,0,0,0,0,21,21,21,0,21,21,21,21,21,21,21,21,21,21,21,24,21,24,0,21,21,21,21,21,24,21,21,21,21,21,24,21,24,21,21,21,21,21,21,21,21,21,21,24,21,21,21,21,21,0,24,21,24,0,21,21,24,21,21,21,21,21,24,21,24,21,24,21,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,33,0,33,0,0,0,33,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,33,33,33,33,33,33,33,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,0,33,33,33,33,33,33,33,0,33,33,33,33,33,33,0,41,41,41,41,41,41,41,41,41,41],"f":"`````````````````````````{{bb}d}{ce{}{}}00000{dd}{ff}{{ce}h{}{}}0`{{}d}{{}h}0`{bh}{{{l{j}}}h}{{nA`}Ab}{{dA`}Ab}{{fA`}{{Af{hAd}}}}{cc{}}00{db}00{d{{Ah{b}}}}18`===`{{}Aj}{dAj}{nh}0{fn}{{}f}{nAl}```````````````{{}An}{{}b}{bd}{dh}````{{db}h}0000000`{{B`B`}h}{ce{}{}}0{c{{Af{e}}}{}{}}00000{cBb{}}00`{{}h}{Anh}0{bh}{{bd}h}{{}{{l{Bd}}}}4{Bdh}{{{Bf{Bd}}}h}44>{{}Aj}`5{{bBh}Aj}{{bAj}h}````````````{{}Bj}{{BjBj}Bj}{{BjBj}h}10{Bjb}021{ce{}{}}000>{BjBj}{{BjBj}Aj}56{{Bjc}h{{Bn{}{{Bl{Bj}}}}}}`{{BjA`}Ab}0000{{C`A`}Ab}{cc{}}0{b{{l{Bj}}}}{bBj}00{cBj{{Bn{}{{Bl{Bj}}}}}}{Cb{{l{Bj}}}}<=8::{Bjc{}}{BjAj}0{Bj{{Cd{Bj}}}}{Bj{{Cf{Bj}}}}{{}{{`{{Ch{}{{Bl{C`}}}}}}}}`>`{Anj}{{BjBj}h}{{BjBjAj}h}`{{BjBj}Bj}202{c{{Af{e}}}{}{}}000{cBb{}}02{jAn}{{}Cj}``````{{}{{l{An}}}}{ce{}{}}0{Anh}{cc{}}2;776``````{{}h}0{{}Cb}{jh}```{bh}{{}Cl}{BdCn}{{bBh}Aj}{{bAj}h}{{}{{l{Bd}}}}8{Bdh}997``65432>{{}D`}:{D`D`}{D`h}1``````````````{{DbDb}Db}0{{DbDb}h}{DbDd}0{DbDf}{DbDh}2{DbD`}21{ce{}{}}0{Dbh}{Djh}{{DbDb}{{l{Db}}}}{{DbCn}{{l{Db}}}}01{DbDb}{{ce}h{}{}}{{DbDb}Dl}{{}D`}{{}Dj}1{{}Db}{{DbCn}Db}{{DbCn}h}{{DbDb}Df}{{DbDb}Dh}{{DbDf}Db}{{DbDh}Db}{{DbDb}Aj}{{DbA`}{{Af{hAd}}}}{cc{}}{D`Db}000000{DfDb}{DhDb}2{{Dbc}hDn}{ce{}{}}{DbAj}>=:9{D`D`}{{D`Cn}Db}{{DbDb}{{l{Dl}}}}{{DbDb}Db}{{DbCn}Db}1{D`h}2{{DbDb}h}{DbCn}00{cDb{{Ch{}{{Bl{Db}}}}}}08:{c{{Af{e}}}{}{}}{Df{{Af{DbE`}}}}{Dh{{Af{DbE`}}}}2{cBb{}}`{{}Eb}??{Ebh}{cc{}}{ce{}{}}{EbBd}885","D":"ALl","p":[[1,"usize"],[5,"TrapFrame",15,357],[5,"TaskStateSegment",15,358],[1,"unit"],[5,"VirtAddr",359],[6,"Option",360],[5,"GdtStruct",15,361],[5,"Formatter",362],[8,"Result",362],[5,"Error",362],[6,"Result",363],[1,"array"],[1,"bool"],[5,"DescriptorTablePointer",364],[5,"PhysAddr",359],[5,"TaskContext",365],[5,"TypeId",366],[1,"u8"],[1,"slice"],[8,"IrqHandler",125],[5,"MemRegionFlags",129],[17,"Item"],[10,"IntoIterator",367],[5,"MemRegion",129],[1,"str"],[5,"Iter",368],[5,"IterNames",368],[10,"Iterator",369],[1,"never"],[5,"LocalApic",370],[1,"u32"],[1,"u64"],[5,"Duration",259,371],[1,"u128"],[1,"f32"],[1,"f64"],[8,"TimeValue",259],[6,"Ordering",372],[10,"Hasher",373],[5,"TryFromFloatSecsError",371],[5,"TlsArea",346],[5,"PagingIfImpl",206]],"r":[[9,374],[10,374],[11,374],[12,375],[15,361],[20,358],[21,357],[38,376],[39,376],[41,357],[42,376],[54,376],[60,376],[82,376],[83,376],[99,357],[112,376],[113,376],[115,376],[117,377],[118,377],[119,377],[126,378],[127,378],[128,378],[134,359],[135,359],[139,359],[205,379],[206,380],[207,381],[209,381],[211,381],[222,374],[223,374],[224,374],[225,374],[226,374],[227,374],[228,374],[229,374],[230,374],[231,375],[232,374],[233,378],[234,378],[235,378],[236,378],[237,378],[238,378],[239,378],[240,377],[241,377],[242,377],[243,375],[244,375],[245,375],[246,378],[247,378],[248,378],[249,378],[250,378],[251,378],[252,378],[253,379],[254,382],[255,382],[256,382],[257,382],[258,382],[259,371],[270,378],[295,382],[325,382],[331,382],[339,382]],"b":[[146,"impl-Flags-for-MemRegionFlags"],[147,"impl-MemRegionFlags"],[161,"impl-Octal-for-MemRegionFlags"],[162,"impl-LowerHex-for-MemRegionFlags"],[163,"impl-Binary-for-MemRegionFlags"],[164,"impl-UpperHex-for-MemRegionFlags"],[165,"impl-Debug-for-MemRegionFlags"],[170,"impl-Flags-for-MemRegionFlags"],[171,"impl-MemRegionFlags"],[337,"impl-Sum%3C%26Duration%3E-for-Duration"],[338,"impl-Sum-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAH8AKQAKAAMAGwALACkAAAAsAAIARQANAFcAAwBjAAAAZQALAHcAAACHAAEAjAAAAJMAAACXAAMAogAFAKsAAAC1AAAAxgAFAM8AAQDSAAAA1AAEANsABQDiAAIA6QAAAO0AAQDyAAAA+gABAAABAAATAQEAHQEBACUBAgArAQIAMgEBAD8BAABCAQEASAEAAE0BAQBSAQEAVQEBAFkBAQBdAQIAYwECAA=="}],\
["axlibc",{"t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["abort","accept","ax_fcntl","ax_open","bind","clock_gettime","close","connect","dup","dup2","dup3","epoll_create","epoll_ctl","epoll_wait","exit","free","freeaddrinfo","fstat","getaddrinfo","getcwd","getpeername","getpid","getrlimit","getsockname","listen","longjmp","lseek","lstat","malloc","mktime","nanosleep","pipe","pthread_create","pthread_exit","pthread_join","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_unlock","pthread_self","rand","random","read","recv","recvfrom","rename","select","send","sendto","setjmp","setrlimit","shutdown","socket","srand","stat","strerror","strftime","strtod","strtof","sysconf","write","writev"],"q":[[0,"axlibc"],[61,"core::ffi"],[62,"arceos_posix_api::ctypes"],[63,"axlibc::unistd"],[64,"axlibc::net"],[65,"axlibc::fd_ops"],[66,"axlibc::fs"],[67,"axlibc::time"],[68,"axlibc::io_mpx"],[69,"axlibc::malloc"],[70,"axlibc::resource"],[71,"axlibc::setjmp"],[72,"axlibc::mktime"],[73,"axlibc::pipe"],[74,"axlibc::pthread"],[75,"axlibc::rand"],[76,"axlibc::io"],[77,"axlibc::errno"],[78,"axlibc::strftime"],[79,"axlibc::strtod"],[80,"axlibc::sys"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{{}b}{{dfh}d}{{ddj}d}{{ldn}d}2{{A`Ab}d}{dd}40{{dd}d}{{ddd}d}2{{dddAd}d}{{dAddd}d}{db}{AfAh}{AjAh}{{dAl}d}{{llAjAj}d}{{lj}l}>{{}d}{{dAn}d}{{dfh}d}<`{{dB`d}B`}{{lAl}d}{BbAf}`{{AbAb}d}{dd}{{BfBh{Bl{Af}{{Bj{Af}}}}Af}d}{Afb}{{BfAf}d}{{BnC`}d}{Bnd}0{{}Bf}={{}Cb}{{dAfj}Cd}{{dAfBbd}Cd}{{dAfBbdfh}Cd}{{ll}d}{{dCfCfCfCh}d}32`{{dAn}d}{{dd}d}{{ddd}d}{CjAh}{{lAl}d}{dl}`{{ll}Cl}{{ll}Cn}{dCb}={{dD`d}Cd}","D":"Gh","p":[[1,"never"],[8,"c_int",61],[5,"sockaddr",62],[8,"socklen_t",62],[1,"usize"],[8,"c_char",61],[8,"mode_t",62],[8,"clockid_t",62],[5,"timespec",62],[5,"epoll_event",62],[6,"c_void",61],[1,"unit"],[5,"addrinfo",62],[5,"stat",62],[5,"rlimit",62],[8,"off_t",62],[8,"size_t",62],[8,"time_t",62],[8,"pthread_t",62],[5,"pthread_attr_t",62],[17,"Output"],[1,"fn"],[5,"pthread_mutex_t",62],[5,"pthread_mutexattr_t",62],[8,"c_long",61],[8,"ssize_t",62],[5,"fd_set",62],[5,"timeval",62],[8,"c_uint",61],[8,"c_double",61],[8,"c_float",61],[5,"iovec",62]],"r":[[0,63],[1,64],[2,65],[3,66],[4,64],[5,67],[6,65],[7,64],[8,65],[9,65],[10,65],[11,68],[12,68],[13,68],[14,63],[15,69],[16,64],[17,66],[18,64],[19,66],[20,64],[21,63],[22,70],[23,64],[24,64],[25,71],[26,66],[27,66],[28,69],[29,72],[30,67],[31,73],[32,74],[33,74],[34,74],[35,74],[36,74],[37,74],[38,74],[39,75],[40,75],[41,76],[42,64],[43,64],[44,66],[45,68],[46,64],[47,64],[48,71],[49,70],[50,64],[51,64],[52,75],[53,66],[54,77],[55,78],[56,79],[57,79],[58,80],[59,76],[60,76]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAABoAMQA="}],\
["axlog",{"t":"KQQMMMMQQQHHHQQ","n":["LogIf","ax_print","ax_println","console_write_str","current_cpu_id","current_task_id","current_time","debug","error","info","init","print_fmt","set_max_level","trace","warn"],"q":[[0,"axlog"],[15,"core::option"],[16,"core::time"],[17,"core::fmt"],[18,"log"]],"i":[0,0,0,9,9,9,9,0,0,0,0,0,0,0,0],"f":"```{bd}{{}{{h{f}}}}{{}{{h{j}}}}{{}l}```{{}d}{nA`}5``","D":"B`","p":[[1,"str"],[1,"unit"],[1,"usize"],[6,"Option",15],[1,"u64"],[5,"Duration",16],[5,"Arguments",17],[8,"Result",17],[10,"LogIf",0]],"r":[[7,18],[8,18],[9,18],[13,18],[14,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axmem",{"t":"JFFFJNNNNNNNNNNNONNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONN","n":["KEY_TO_SHMID","MapArea","MemBackend","MemorySet","SHARED_MEMS","add_private_shared_mem","add_shared_mem","allocated","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_slice","attach_shared_mem","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_page_table_entry_validity","clone","clone_alloc","clone_into","clone_or_err","clone_with_delta","contained_in","contains","create_shared_mem","dealloc","detach_shared_mem","drop","end_va","fill","find_free_area","flags","from","from","from","get_private_shared_mem","get_shared_mem","handle_page_fault","handle_page_fault","into","into","into","manual_alloc_for_lazy","manual_alloc_range_for_lazy","manual_alloc_type_for_lazy","map_page_without_alloc","max_va","mmap","mprotect","mremap","msync","munmap","new","new_alloc","new_empty","new_lazy","new_memory_set","new_region","overlap_with","page_table_root_ppn","page_table_token","pages","query","read","read_from_seek","readable","remove_mid","seek","shrink_left","shrink_right","size","split","split3","split_for_area","strict_contain","sync_page_with_backend","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmap_user_areas","update_flags","vaddr","writable","write_to_seek"],"q":[[0,"axmem"],[98,"axmem::area"],[99,"core::any"],[100,"alloc::sync"],[101,"memory_addr"],[102,"page_table_entry"],[103,"axhal::paging"],[104,"page_table"],[105,"core::result"],[106,"axmem::backend"],[107,"axerrno"],[108,"core::option"],[109,"axfs::api::port"],[110,"alloc::boxed"],[111,"axio"]],"i":[0,0,0,0,0,1,1,4,4,15,1,4,15,1,4,1,4,4,15,1,4,15,1,0,15,4,15,1,15,4,4,1,4,1,1,4,4,1,4,4,15,1,1,1,4,1,4,15,1,1,1,1,1,1,1,1,1,1,1,15,4,1,4,1,1,4,1,1,4,1,15,15,15,4,15,4,4,4,4,4,1,4,4,15,4,15,1,4,15,1,4,15,1,1,4,4,15,15],"f":"```````{hj}{cl{}}00000{h{{A`{n}}}}{{b{Ab{`}}AdAf}f}`{ce{}{}}00000{{AdAh}{{Al{fAj}}}}{AnAn}{{hAhAh}{{B`{h}}}}{{ce}f{}{}}{b{{B`{b}}}}{{AnBb}An}{{hAdAd}j}0{{dBdBfBhBhBj}{{B`{{Bl{d`}}}}}}{{hAh}f}{{bd}f}{bf}{hAd}{{hn}f}{{bAdBd}{{Bn{Ad}}}}`{cc{}}00{{bd}{{Bn{{Ab{`}}}}}}{d{{Bn{{Ab{`}}}}}}{{hAdAfAh}j}{{bAdAf}{{B`{f}}}}{ce{}{}}00{{bAd}{{B`{f}}}}{{bAdAd}{{B`{f}}}}{b{{B`{f}}}}{{bAdC`Af}{{B`{f}}}}{bAd}{{bAdBdAfjj{Bn{An}}}{{B`{Bd}}}}{{bAdBdAf}f}{{bAdBdBd}Cb}{{bAdBd}f}0{{{Cf{Cd}}Bf}An}{{AdBdAf{Bn{{A`{n}}}}{Bn{An}}Ah}{{B`{h}}}}{{}b}{{AdBdAf{Bn{An}}Ah}h}1{{bAdBdjAf{Bn{{A`{n}}}}{Bn{An}}}f}{{hAdAd}j}{bC`}{bBd}`{{bAd}{{B`{{Bl{C`AfCh}}}}}}{{An{A`{n}}}{{B`{Bd}}}}{{AnCj{A`{n}}}{{Al{BdCl}}}}{Anj}{{hAdAdAh}h}{{AnCj}{{B`{Bf}}}}{{hAdAh}f}0{hBd}{{hAd}h}{{hAdAd}{{Bl{hh}}}}{{bAdBd}f}={{hBd}f}{ce{}{}}{c{{Al{e}}}{}{}}00000{cCn{}}00{bf}{{hAfAh}f}`=>","D":"I`","p":[[5,"MemorySet",0],[1,"i32"],[1,"unit"],[5,"MapArea",0,98],[1,"bool"],[10,"Any",99],[1,"u8"],[1,"slice"],[5,"Arc",100],[5,"VirtAddr",101],[5,"MappingFlags",102],[8,"PageTable",103],[6,"PagingError",104],[6,"Result",105],[5,"MemBackend",0,106],[8,"AxResult",107],[1,"i64"],[1,"usize"],[1,"u64"],[1,"u32"],[1,"u16"],[1,"tuple"],[6,"Option",108],[5,"PhysAddr",101],[1,"isize"],[10,"FileExt",109],[5,"Box",110],[6,"PageSize",104],[6,"SeekFrom",111],[6,"AxError",107],[5,"TypeId",99]],"r":[[1,98],[2,106]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABoACAAJAAUAEgAFABkAAAAbAAAAIwAAAEcAAABLAAAAVAAJAA=="}],\
["axnet",{"t":"TFTGPFPFTTTTTTTFFTTFTNNNHONNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNHNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BROADCAST","Duration","IPV4_MAPPED_PREFIX","IpAddr","Ipv4","Ipv4Addr","Ipv6","Ipv6Addr","LINK_LOCAL_ALL_NODES","LINK_LOCAL_ALL_ROUTERS","LINK_LOCAL_ALL_RPL_NODES","LOOPBACK","MAX","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","SocketAddr","TcpSocket","UNSPECIFIED","UNSPECIFIED","UdpSocket","ZERO","accept","add","add_assign","add_membership","addr","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","as_bytes","as_ipv4","bench_receive","bench_transmit","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","cmp","connect","connect","default","default","default","div","div_assign","dns_query","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_core_sockaddr","from_micros","from_millis","from_parts","from_secs","from_str","from_str","from_str","from_str","hash","hash","hash","hash","init_network","into","into","into","into","into","into","into","into_address","into_address","into_core_sockaddr","is_broadcast","is_broadcast","is_closed","is_connected","is_global_unicast","is_ipv4_mapped","is_link_local","is_link_local","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_nonblocking","is_nonblocking","is_reuse_addr","is_reuse_addr","is_unicast","is_unicast","is_unicast","is_unique_local","is_unspecified","is_unspecified","is_unspecified","listen","local_addr","local_addr","micros","millis","mul","mul_assign","nagle_enabled","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","poll","poll","poll_interfaces","port","prefix_len","read","read","recv","recv","recv_from","recv_from_timeout","recv_timeout","secs","send","send","send_to","set_nagle_enabled","set_nonblocking","set_nonblocking","set_reuse_addr","set_reuse_addr","set_socket_ttl","shl","shl_assign","shr","shr_assign","shutdown","shutdown","solicited_node","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","total_micros","total_millis","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v4","v6","version","with_socket","with_socket","with_socket_mut","write","write","write_parts"],"q":[[0,"axnet"],[266,"axnet::smoltcp_impl::tcp"],[267,"axerrno"],[268,"smoltcp::time"],[269,"core::any"],[270,"core::option"],[271,"core::net::socket_addr"],[272,"axnet::smoltcp_impl::udp"],[273,"core::cmp"],[274,"core::net::ip_addr"],[275,"alloc::vec"],[276,"core::fmt"],[277,"core::result"],[278,"core::time"],[279,"core::convert"],[280,"core::hash"],[281,"axdriver::dummy"],[282,"axdriver::structs::imp"],[283,"axio"],[284,"alloc::string"],[285,"smoltcp::wire::ip"],[286,"smoltcp::socket::tcp"],[287,"core::ops::function"],[288,"smoltcp::socket::udp"],[289,"axnet::smoltcp_impl"],[290,"axnet::smoltcp_impl::dns"],[291,"axnet::smoltcp_impl::addr"]],"i":[9,0,10,0,5,0,5,0,10,10,10,10,3,9,9,0,0,9,10,0,3,1,3,3,0,14,1,13,3,5,14,9,10,1,13,3,5,14,9,10,5,9,10,10,0,0,1,13,1,13,3,5,14,9,10,1,13,3,5,14,9,10,3,5,14,9,10,3,5,14,9,10,1,3,5,14,9,10,1,13,3,9,10,3,3,0,1,13,3,5,14,9,10,3,5,14,9,10,1,13,3,3,5,5,14,14,9,9,10,10,1,13,3,3,5,5,5,14,14,9,10,10,9,10,0,3,3,10,3,5,14,9,10,5,14,9,10,0,1,13,3,5,14,9,10,9,10,0,5,9,1,1,10,10,9,10,9,10,5,9,10,1,13,1,13,5,9,10,10,5,9,10,1,1,13,3,3,3,3,1,1,13,14,9,10,3,5,14,9,10,13,1,13,1,13,0,14,5,1,13,1,13,13,13,1,3,1,13,13,1,1,13,1,13,13,3,3,3,3,1,13,10,3,3,3,5,14,9,10,3,5,14,9,10,3,3,1,13,3,5,14,9,10,1,13,3,5,14,9,10,1,13,3,5,14,9,10,5,5,5,1,13,1,1,13,10],"f":"`````````````````````{b{{d{b}}}}{{ff}f}{{ff}h}{{jj}h}`{cl{}}0000000000000{j{{A`{n}}}}{Ab{{A`{n}}}}{Ad{{A`{n}}}}{Ad{{Af{Ab}}}}{{}h}0{{bAh}d}{{AjAh}d}{ce{}{}}0000000000000{ff}{jj}{AlAl}{AbAb}{AdAd}{{ce}h{}{}}0000{bh}{{ff}An}{{jj}An}{{AlAl}An}{{AbAb}An}{{AdAd}An}>={{}f}{{}Ab}{{}Ad}{{fB`}f}{{fB`}h}{Bb{{d{{Bf{Bd}}}}}};{Ajh}{{ff}Bh}{{jj}Bh}{{AlAl}Bh}{{AbAb}Bh}{{AdAd}Bh}{{ce}Bh{}{}}0000{bd}{Ajd}{{fBj}{{Bn{hBl}}}}0{{jBj}{{Bn{hBl}}}}0{{AlBj}{{Bn{hBl}}}}0{{AbBj}{{Bn{hBl}}}}0{{AdBj}{{Bn{hBl}}}}0{cc{}}00{C`f}{Abj}{Adj}33{{{Cd{cCb}}}Al{{Cf{j}}}}4{AbAd}5{{{A`{n}}}Ab}{{{A`{n}}}Ad}{AhAl}{Chf}0{{{A`{Cb}}}Ad}1{Bb{{Bn{jh}}}}{Bb{{Bn{Alh}}}}{Bb{{Bn{Abh}}}}{Bb{{Bn{Adh}}}}{{jc}hCj}{{Alc}hCj}{{Abc}hCj}{{Adc}hCj}{{{Cn{Cl}}}h}{ce{}{}}000000{Abj}{Adj}{AlAh}{jBh}{AbBh}{bBh}0{AdBh}020203201{AjBh}204311431{bd}{b{{d{Ah}}}}{Aj{{d{Ah}}}}{fCh}0{{fB`}f}{{fB`}h}8{{}b}{{}Aj}{{jCb}Al}{{nnnn}Ab}{{CbCbCbCbCbCbCbCb}Ad}{{ff}{{Af{An}}}}{{jj}{{Af{An}}}}{{AlAl}{{Af{An}}}}{{AbAb}{{Af{An}}}}{{AdAd}{{Af{An}}}}{{Aj{A`{n}}}{{d{{Cd{D`Ah}}}}}}?>{b{{d{Db}}}}{Aj{{d{Db}}}}{{}h}`{j{{Af{n}}}}{{b{A`{n}}}{{d{D`}}}}{{Aj{A`{n}}}{{d{D`}}}}106{{Aj{A`{n}}Ch}{{d{{Cd{D`Ah}}}}}}{{b{A`{n}}Ch}{{d{D`}}}}{fCh}43{{Aj{A`{n}}Ah}{{d{D`}}}}{{bBh}d}{{bBh}h}{{AjBh}h}10{{Ajn}h}{{fB`}f}{{fB`}h}10{bd}{Ajd}{AdAd}{{ff}f}{{ff}h}{ce{}{}}0000{cDd{}}0000>>{c{{Bn{e}}}{}{}}0000000000000{cDf{}}000000{{nnnn}j}{{CbCbCbCbCbCbCbCb}j}{jDh}{{be}c{}{{Dn{{Af{Dj}}}{{Dl{c}}}}}}{{Aje}c{}{{Dn{E`}{{Dl{c}}}}}}1{{b{A`{n}}}{{d{D`}}}}{{Aj{A`{n}}}{{d{D`}}}}{{Ad{A`{Cb}}}h}","D":"A@h","p":[[5,"TcpSocket",0,266],[8,"AxResult",267],[5,"Duration",0,268],[1,"unit"],[6,"IpAddr",0],[10,"Any",269],[1,"u8"],[1,"slice"],[5,"Ipv4Addr",0],[5,"Ipv6Addr",0],[6,"Option",270],[6,"SocketAddr",271],[5,"UdpSocket",0,272],[5,"SocketAddr",0],[6,"Ordering",273],[1,"u32"],[1,"str"],[6,"IpAddr",274],[5,"Vec",275],[1,"bool"],[5,"Formatter",276],[5,"Error",276],[6,"Result",277],[5,"Duration",278],[1,"u16"],[1,"tuple"],[10,"Into",279],[1,"u64"],[10,"Hasher",280],[8,"AxNetDevice",281],[5,"AxDeviceContainer",282],[1,"usize"],[5,"PollState",283],[5,"String",284],[5,"TypeId",269],[6,"Version",285],[5,"Socket",286],[17,"Output"],[10,"FnOnce",287],[5,"Socket",288]],"r":[[1,268],[16,266],[19,272],[24,289],[44,289],[45,289],[85,290],[124,291],[147,291],[195,289]],"b":[[100,"impl-Debug-for-Duration"],[101,"impl-Display-for-Duration"],[102,"impl-Debug-for-IpAddress"],[103,"impl-Display-for-IpAddress"],[104,"impl-Debug-for-IpEndpoint"],[105,"impl-Display-for-IpEndpoint"],[106,"impl-Debug-for-Ipv4Address"],[107,"impl-Display-for-Ipv4Address"],[108,"impl-Debug-for-Ipv6Address"],[109,"impl-Display-for-Ipv6Address"],[114,"impl-From%3CIpv4Address%3E-for-IpAddress"],[115,"impl-From%3CIpv6Address%3E-for-IpAddress"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIYAFAAVAAAAFwABABoADgAxABcASgAEAFEABABXABcAcgACAHcAAAB5AAAAgwAAAIYAAwCyAAEAugAEAMUAAADHAAEA2AADAN8ACwDtABQACAEBAA=="}],\
["axprocess",{"t":"JFJNNNONNONHHNOHOOCNCNNNNNNNNHNNHNNOONHNOCHNNNONONOHNNNNNNNNNCOHOOHHHNNNHHTTTTTTTTTTTTTTTTTTTFPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNHHHHONONNNNSFJNNNNNNNHHNNNNNNNNHHNNNNNNNHHHNNNNNFONNNNHNNHNNNOHHHNOOHONNN","n":["PID2PC","Process","TID2TASK","alloc_fd","as_any","as_any_mut","blocked_by_vfork","borrow","borrow_mut","children","clone_task","current_process","current_task","exec","exit_code","exit_current_task","fd_manager","file_path","flags","from","futex","get_code_if_exit","get_cwd","get_exit_code","get_file_path","get_heap_bottom","get_heap_top","get_parent","get_stack_limit","get_task_ref","get_vfork_block","get_zombie","handle_page_fault","have_restart_signals","have_signals","heap_bottom","heap_top","init","init_kernel_process","into","is_zombie","link","load_app","manual_alloc_for_lazy","manual_alloc_range_for_lazy","manual_alloc_type_for_lazy","memory_set","new","parent","pid","robust_list","set_child_tid","set_cwd","set_exit_code","set_file_path","set_heap_bottom","set_heap_top","set_parent","set_stack_limit","set_vfork_block","set_zombie","signal","signal_modules","sleep_now_task","stack_size","tasks","time_stat_from_kernel_to_user","time_stat_from_user_to_kernel","time_stat_output","try_from","try_into","type_id","wait_pid","yield_now_task","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneFlags","Exited","NotExist","Running","WaitStatus","all","as_any","as_any","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","FutexRobustList","as_any","as_any_mut","borrow","borrow_mut","default","from","futex_requeue","futex_wait","futex_wake","futex_wake_bitset","head","into","len","new","try_from","try_into","type_id","AT_FDCWD","FilePath","LINK_COUNT_MAP","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","create_link","deal_with_path","dir","end_with","eq","equal_to","equivalent","file","fmt","from","get_link_count","get_str_len","into","is_dir","is_file","is_root","new","partial_cmp","path","raw_ptr_to_ref_str","real_path","remove_link","start_with","to_owned","try_from","try_into","type_id","SignalModule","alternate_stack","as_any","as_any_mut","borrow","borrow_mut","current_have_signals","from","get_exit_signal","handle_signals","have_restart_signal","init_signal","into","last_trap_frame_for_signal","load_trap_for_signal","send_signal_to_process","send_signal_to_thread","set_exit_signal","sig_info","signal_handler","signal_return","signal_set","try_from","try_into","type_id"],"q":[[0,"axprocess"],[74,"axprocess::flags"],[166,"axprocess::futex"],[184,"axprocess::link"],[221,"axprocess::signal"],[246,"axprocess::process"],[247,"axfs::api::port"],[248,"alloc::sync"],[249,"core::option"],[250,"alloc::vec"],[251,"axerrno"],[252,"core::any"],[253,"axsignal::signal_no"],[254,"axtask::task"],[255,"alloc::string"],[256,"axtask::api"],[257,"memory_addr"],[258,"page_table_entry"],[259,"axmem"],[260,"spinlock"],[261,"core::sync::atomic"],[262,"core::time"],[263,"core::result"],[264,"core::iter::traits::collect"],[265,"core::fmt"],[266,"bitflags::iter"],[267,"axfutex::flags"],[268,"axerrno::linux_errno"],[269,"core::cmp"],[270,"axsignal"],[271,"axsignal::info"],[272,"axprocess::api"]],"i":[0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,27,27,27,0,28,28,27,28,27,28,28,28,28,28,28,28,28,28,27,28,27,28,27,28,27,28,28,28,28,27,27,28,28,28,28,28,28,27,28,27,28,28,28,28,28,28,28,28,28,28,27,28,28,28,28,28,28,28,28,28,28,28,28,27,28,28,27,28,27,28,27,28,0,37,37,37,37,37,37,0,0,0,0,37,37,37,37,37,37,37,0,0,0,41,41,41,41,41,41,41,0,0,41,41,41,41,41,41,41,41,0,0,41,41,41,41,41,41,41,0,0,0,41,41,41,41,41,0,44,44,44,44,44,0,44,44,0,44,44,44,44,0,0,0,44,44,44,0,44,44,44,44],"f":"```{{b{j{{h{{f{d}}}}}}}{{n{l}}}}{cA`{}}0`{ce{}{}}0`{{bl{h{l}}lll{h{Ab}}}{{n{Ad}}}}{{}{{f{b}}}}{{}Af}{{bAh{j{Ah}}{j{Ah}}}{{n{Aj}}}}`{AlAn}```{cc{}}`{b{{h{Al}}}}{bAh}{bAl}1{bAd}000{Ad{{h{B`}}}}{bBb}0{{BdBf}Aj}{b{{h{Bb}}}}{b{{h{l}}}}``{{{j{Ah}}{j{Ah}}}{{n{B`}}}}{{}Aj}{ce{}{}}``{{Ah{j{Ah}}{j{Ah}}Bh}{{n{{Bj{BdBdBd}}}}}}{{bBd}{{n{Aj}}}}{{bBdBd}{{n{Aj}}}}{b{{n{Aj}}}}`{{AdAdAd{Bl{{f{{Bl{Bh}}}}}}Ad{f{{Bl{Ah}}}}{f{Bn}}{f{{Bl{{j{{h{{f{d}}}}}}}}}}}b}`=`{lAj}{{bAh}Aj}{{bAl}Aj}1{{bAd}Aj}000{{bBb}Aj}0``{C`Aj}``<<{{}{{Bj{llll}}}}{c{{Cb{e}}}{}{}}0{cCd{}}{{AlAl}{{Cb{AdCf}}}}{{}Aj}````````````````````````{{}Ch}{cA`{}}000{{ChCh}Ch}{{ChCh}Aj}10{ChCj}021{ce{}{}}000{ChCh}{CfCf}{{ce}Aj{}{}}02{{ChCh}Bb}79{{CfCf}Bb}{{ce}Bb{}{}}{{Chc}Aj{{Cn{}{{Cl{Ch}}}}}}{{ChD`}Db}0000{{CfD`}Db}{cc{}}0{Cj{{h{Ch}}}}{CjCh}00{cCh{{Cn{}{{Cl{Ch}}}}}}{Dd{{h{Ch}}}}{{ChCh}Aj}{{ChCh}Ch}<{ce{}{}}0{Chc{}}{ChBb}0{Ch{{Df{Ch}}}}{Ch{{Dh{Ch}}}}{ChCh}7{{ChChBb}Aj}787668{c{{Cb{e}}}{}{}}000{cCd{}}09`{cA`{}}099{{}Dj}{cc{}}{{BdDlCjBdCj}{{Cb{DnE`}}}}{{BdDlCj{h{C`}}Cj}{{Cb{DnE`}}}}{{BdDlCj}{{Cb{DnE`}}}}{{BdDlCjCj}{{Cb{DnE`}}}}`?`{{ll}Dj}998```77{ce{}{}}0{EbEb}{{ce}Aj{}{}}{{EbEb}Ed}{{EbEb}Bb}{{l{h{Ef}}Bb}{{n{Eb}}}}{Eb{{n{Dd}}}}222{{ce}Bb{}{}}1{{EbD`}Db}>{Ahl}{Efl}:{EbBb}00{Dd{{n{Eb}}}}{{EbEb}{{h{Ed}}}}{EbDd}{EfDd}{AhAh}{Eb{{h{Ah}}}}={ce{}{}}{c{{Cb{e}}}{}{}}0{cCd{}}``{cA`{}}033{{}Bb}{cc{}}{Eh{{h{Ab}}}}{{}Aj}{Eh{{h{Bb}}}}{{{h{{f{{Bl{Ej}}}}}}}Eh}9`5{{DnDn{h{El}}}{{n{Aj}}}}{{DnDn}{{n{Aj}}}}{{EhAb}Aj}``{{}Dn}`<<;","D":"AFf","p":[[5,"Process",0,246],[10,"FileIO",247],[5,"Arc",248],[6,"Option",249],[5,"Vec",250],[1,"usize"],[8,"AxResult",251],[10,"Any",252],[6,"SignalNo",253],[1,"u64"],[5,"CurrentTask",254],[5,"String",255],[1,"unit"],[1,"i32"],[1,"never"],[8,"AxTaskRef",256],[1,"bool"],[5,"VirtAddr",257],[5,"MappingFlags",258],[5,"MemorySet",259],[1,"tuple"],[8,"SpinNoIrq",260],[5,"AtomicI32",261],[5,"Duration",262],[6,"Result",263],[5,"TypeId",252],[6,"WaitStatus",74],[5,"CloneFlags",74],[1,"u32"],[17,"Item"],[10,"IntoIterator",264],[5,"Formatter",265],[8,"Result",265],[1,"str"],[5,"Iter",266],[5,"IterNames",266],[5,"FutexRobustList",166],[5,"FutexFlags",267],[1,"isize"],[6,"LinuxError",268],[5,"FilePath",184],[6,"Ordering",269],[1,"u8"],[5,"SignalModule",221],[5,"SignalHandler",270],[5,"SigInfo",271]],"r":[[0,246],[1,246],[2,246],[11,272],[12,272],[15,272],[29,272],[32,272],[38,272],[42,272],[51,272],[63,272],[66,272],[67,272],[68,272],[72,272],[73,272]],"b":[[107,"impl-CloneFlags"],[108,"impl-Flags-for-CloneFlags"],[126,"impl-UpperHex-for-CloneFlags"],[127,"impl-LowerHex-for-CloneFlags"],[128,"impl-Binary-for-CloneFlags"],[129,"impl-Octal-for-CloneFlags"],[130,"impl-Debug-for-CloneFlags"],[135,"impl-Flags-for-CloneFlags"],[136,"impl-CloneFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEMAFgAFAAEACAABAEYAAgBkAAMAbQAAAHAABwB8AAEAfwAFAIgAAACSAAAAnQABAKAABQCoAAQAtgACALwABgDHAAAAyQAAAMsAAADUAAAA2gADAOAAAwD0AAIA"}],\
["axruntime",{"t":"JHHHHH","n":["KERNEL_PAGE_TABLE","entered_cpus_num","exit_main","is_init_ok","rust_main","rust_main_secondary"],"q":[[0,"axruntime"],[6,"axruntime::mp"]],"i":[0,0,0,0,0,0],"f":"`{{}b}{{}d}{{}f}{{bb}d}{bh}","D":"n","p":[[1,"usize"],[1,"unit"],[1,"bool"],[1,"never"]],"r":[[1,6],[5,6]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axsignal",{"t":"FFCNNNNNNNNNNNNNNNNNOCONNONNONCNNNNNNNNNCPPPTTTTTTTTSSFFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNFNNNNNNNOOOOOOONNNNOPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNFSSSFFNNNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNNN","n":["SignalHandler","SignalSet","action","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","find_signal","from","from","get_action","get_one_signal","handlers","info","info","into","into","mask","new","new","pending","set_action","signal_no","to_owned","to_owned","try_add_signal","try_from","try_from","try_into","try_into","type_id","type_id","ucontext","Cont","Core","Ignore","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SIG_DFL","SIG_IGN","SigAction","SigActionFlags","SignalDefault","Stop","Terminate","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","default","default","difference","empty","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_action","get_storer","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","need_restart","not","remove","restorer","sa_flags","sa_handler","sa_mask","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","SigInfo","borrow","borrow_mut","clone","clone_into","default","from","into","pad","pid","si_code","si_errno","si_signo","si_val_int","si_val_ptr","to_owned","try_from","try_into","type_id","uid","ERR","MAX_SIG_NUM","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRT1","SIGRT10","SIGRT11","SIGRT12","SIGRT13","SIGRT14","SIGRT15","SIGRT16","SIGRT17","SIGRT18","SIGRT19","SIGRT2","SIGRT20","SIGRT21","SIGRT22","SIGRT23","SIGRT24","SIGRT25","SIGRT26","SIGRT27","SIGRT28","SIGRT29","SIGRT3","SIGRT30","SIGRT31","SIGRT4","SIGRT5","SIGRT6","SIGRT7","SIGRT8","SIGRT9","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalNo","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","to_owned","try_from","try_from","try_into","type_id","MContext","SS_AUTODISARM","SS_DISABLE","SS_ONSTACK","SignalStack","SignalUserContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","eq","flags","fmt","fmt","from","from","from","get_pc","init","into","into","into","size","sp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"axsignal"],[41,"axsignal::action"],[137,"axsignal::info"],[157,"axsignal::signal_no"],[237,"axsignal::ucontext"],[284,"core::option"],[285,"core::result"],[286,"core::any"],[287,"core::iter::traits::collect"],[288,"core::fmt"],[289,"bitflags::iter"],[290,"axsignal::ucontext::x86_64"]],"i":[0,0,0,1,3,1,3,1,3,1,3,1,3,1,3,3,1,3,1,3,1,0,3,1,3,3,1,3,3,1,0,1,3,3,1,3,1,3,1,3,0,19,19,19,10,10,10,10,10,10,10,10,0,0,0,0,0,19,19,10,10,10,10,10,10,10,10,10,19,10,6,19,10,6,10,6,10,6,10,10,10,6,10,10,10,10,10,10,10,10,6,19,10,6,10,10,10,10,10,10,19,6,10,10,10,19,10,6,10,10,10,10,10,6,10,10,6,6,6,6,10,10,10,10,10,6,10,19,10,6,19,10,6,19,10,6,10,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,24,23,23,24,23,24,25,25,25,23,24,25,23,23,23,24,25,23,24,25,23,24,25,23,24,25],"f":"```{ce{}{}}000{bd}{fd}{bb}{ff}{{ce}d{}{}}0{{}b}{{}f}{f{{j{h}}}}{cc{}}0{{bh}l}2```::`43`{{bhl}d}`;;{{fh{j{n}}}d}{c{{A`{e}}}{}{}}000{cAb{}}0```````````````````{{}Ad}{{AdAd}Ad}{{AdAd}d}10{AdAf}021{ce{}{}}00000{AdAd}{ll}{{ce}d{}{}}02{{AdAd}Ah}8{{}l}89{{Adc}d{{Al{}{{Aj{Ad}}}}}}{{AdAn}B`}0000{{lAn}B`}{cc{}}00{Af{{j{Ad}}}}{AfAd}00{cAd{{Al{}{{Aj{Ad}}}}}}{Bb{{j{Ad}}}}{BdBf}{l{{j{h}}}}{{AdAd}d}{{AdAd}Ad}={ce{}{}}00{Adc{}}{AdAh}0{Ad{{Bh{Ad}}}}{Ad{{Bj{Ad}}}}{lAh}{AdAd}8````{{AdAdAh}d}898779{c{{A`{e}}}{}{}}00000{cAb{}}00:`99{nn}{{ce}d{}{}}{{}n}{cc{}}=```````=554```````````````````````````````````````````````````````````````````=={BdBd}3{{BdBd}Ah}{{BdAn}B`}{hBd}4{ce{}{}}0:{Bl{{A`{BdBl}}}};:``````111111{BnBn}{C`C`}{CbCb};;;{{}Bn}{{}C`}{{}Cb}{{C`C`}Ah}`{{BnAn}B`}{{C`An}B`}???{Cbh}{{hh}Cb}<<<``<<<{c{{A`{e}}}{}{}}00000{cAb{}}00","D":"O`","p":[[5,"SignalHandler",0],[1,"unit"],[5,"SignalSet",0],[1,"usize"],[6,"Option",284],[5,"SigAction",41],[5,"SigInfo",137],[6,"Result",285],[5,"TypeId",286],[5,"SigActionFlags",41],[1,"u32"],[1,"bool"],[17,"Item"],[10,"IntoIterator",287],[5,"Formatter",288],[8,"Result",288],[1,"str"],[6,"SignalNo",157],[6,"SignalDefault",41],[5,"Iter",289],[5,"IterNames",289],[1,"u8"],[5,"SignalStack",237,290],[5,"MContext",237,290],[5,"SignalUserContext",237,290]],"r":[[237,290],[241,290],[242,290]],"b":[[64,"impl-Flags-for-SigActionFlags"],[65,"impl-SigActionFlags"],[85,"impl-UpperHex-for-SigActionFlags"],[86,"impl-Binary-for-SigActionFlags"],[87,"impl-LowerHex-for-SigActionFlags"],[88,"impl-Debug-for-SigActionFlags"],[89,"impl-Octal-for-SigActionFlags"],[95,"impl-Flags-for-SigActionFlags"],[96,"impl-SigActionFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKQAFQAEAAMACgAFACAAAQAjAAUAQQAAAEUACQBRAAEAVgAFAGAAAABtAAAAfQABAIAACACLAAQAmQADAJ4AAACgAD4A4AAGAOkABAD0AA8ABQEBABEBCwA="}],\
["axstarry",{"t":"HHHHH","n":["fs_init","init_current_dir","println","recycle_user_process","run_testcase"],"q":[[0,"axstarry"],[5,"axstarry::file"],[6,"linux_syscall_api::api"],[7,"axstarry::api"]],"i":[0,0,0,0,0],"f":"{{}b}0{db}10","D":"l","p":[[1,"unit"],[1,"str"]],"r":[[0,5],[1,6],[2,7],[3,6],[4,7]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["axstd",{"t":"EEEEECECECEECECQQCEEEECCCEEHHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNHNNPPPPPKFPPPPPPPGPPPPPPPPPPPKPIKGPFFFFPPPPPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNNMHHNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNKKKKMMMNMNNNNNNNMNMNNTTTGFFRTTGFFFFKTTFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEHEFFENNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNHFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["arch","boxed","cell","cmp","collections","env","format","fs","hint","io","marker","mem","net","ops","os","print","println","process","ptr","slice","str","string","sync","thread","time","vec","vec","current_dir","set_current_dir","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","AddrInUse","Again","AlreadyExists","BadAddress","BadState","BufRead","BufReader","Busy","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","Read","ResourceBusy","Result","Seek","SeekFrom","Start","Stdin","StdinLock","Stdout","StdoutLock","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone_into","clone_into","code","consume","consume","consume","eq","eq","fill_buf","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into","into","into","into_inner","lock","lock","new","prelude","read","read","read","read","read_exact","read_exact","read_full","read_line","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_until","rewind","seek","stdin","stdout","stream_position","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","BufRead","Read","Seek","Write","consume","fill_buf","flush","has_data_left","read","read_exact","read_full","read_line","read_to_end","read_to_string","read_until","rewind","seek","stream_position","write","write_all","write_fmt","BITS","BITS","BROADCAST","IpAddr","Ipv4Addr","Ipv6Addr","Iter","LOCALHOST","LOCALHOST","SocketAddr","SocketAddrV4","SocketAddrV6","TcpListener","TcpStream","ToSocketAddrs","UNSPECIFIED","UNSPECIFIED","UdpSocket","V4","V4","V6","V6","accept","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","connect","connect","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","flowinfo","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","ip","ip","ip","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv4_mapped","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","local_addr","local_addr","local_addr","multicast_scope","new","new","new","new","new","not","not","not","not","octets","octets","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","port","port","port","read","recv","recv_from","scope_id","segments","send","send_to","set_flowinfo","set_ip","set_ip","set_ip","set_port","set_port","set_port","set_scope_id","shutdown","steps_between","steps_between","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","arceos","api","exit","Arc","Mutex","MutexGuard","Weak","as_any","as_any","as_any_mut","as_any_mut","atomic","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Builder","JoinHandle","Thread","ThreadId","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","eq","exit","fmt","fmt","from","from","from","from","id","into","into","into","into","join","name","new","sleep","sleep_until","spawn","spawn","stack_size","thread","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","yield_now","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","add","add","add_assign","add_assign","as_any","as_any","as_any_mut","as_any_mut","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_mul","checked_sub","checked_sub","clone","clone","clone_into","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","elapsed","eq","fmt","from","from","from","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","type_id","type_id"],"q":[[0,"axstd"],[27,"axstd::env"],[29,"axstd::fs"],[149,"axstd::io"],[316,"axstd::io::prelude"],[337,"axstd::net"],[663,"axstd::os"],[664,"axstd::os::arceos"],[665,"axstd::process"],[666,"axstd::sync"],[702,"axstd::thread"],[762,"axstd::time"],[862,"alloc::string"],[863,"axstd::fs::file"],[864,"core::any"],[865,"axstd::fs::dir"],[866,"core::fmt"],[867,"core::option"],[868,"alloc::vec"],[869,"axio"],[870,"core::result"],[871,"core::convert"],[872,"axio::buffered::bufreader"],[873,"axstd::io::stdio"],[874,"capability"],[875,"axstd::net::tcp"],[876,"core::net::socket_addr"],[877,"core::net::ip_addr"],[878,"axstd::net::socket_addr"],[879,"axstd::net::udp"],[880,"core::cmp"],[881,"core::net::parser"],[882,"core::hash"],[883,"core::iter::traits::iterator"],[884,"std::io::error"],[885,"axstd::sync::mutex"],[886,"core::marker"],[887,"core::default"],[888,"axstd::thread::multi"],[889,"core::num::nonzero"],[890,"core::time"],[891,"axhal::time"],[892,"core::ops::function"],[893,"smoltcp::time"],[894,"core"],[895,"alloc"],[896,"alloc::sync"],[897,"core::sync"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,0,0,13,0,13,0,0,0,0,0,13,13,5,16,12,10,8,11,5,16,12,10,8,11,5,8,16,12,10,8,11,5,16,12,10,8,11,5,5,5,10,11,5,0,0,10,5,11,12,12,8,10,12,8,11,5,16,12,10,8,11,5,16,12,10,8,11,5,16,8,8,8,0,10,11,5,16,10,5,10,12,8,0,10,5,0,0,11,0,0,0,10,10,8,5,5,16,12,10,8,11,5,16,12,10,8,11,5,16,12,10,8,11,5,0,10,5,27,27,27,27,27,0,0,27,27,27,23,27,23,2,0,27,27,27,27,27,27,27,27,27,2,27,0,27,0,0,0,23,0,0,0,0,27,27,27,27,27,0,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,28,28,23,27,23,27,27,30,28,32,23,27,30,28,32,33,34,35,23,27,27,28,38,32,34,35,23,27,27,28,28,30,28,38,32,34,35,23,27,28,38,34,28,0,31,28,38,32,28,31,31,38,32,30,28,31,28,31,32,30,39,39,0,0,39,23,27,27,28,38,32,34,35,23,27,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,33,34,35,33,33,0,0,0,0,30,30,33,30,31,31,31,30,31,31,30,39,39,39,33,33,33,45,46,45,0,0,0,47,45,46,0,0,0,0,0,0,45,46,0,49,43,49,43,41,42,41,48,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,45,46,45,46,41,48,45,45,45,45,46,46,46,46,45,45,46,46,45,45,45,45,46,46,46,46,45,45,46,46,42,41,48,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,49,45,46,43,50,51,49,45,46,43,50,51,49,45,46,43,50,51,42,48,49,49,49,45,45,46,46,43,50,51,51,42,49,49,45,45,46,46,43,43,50,50,51,51,45,46,45,46,42,41,48,49,49,49,49,49,49,45,45,45,46,46,46,46,43,43,43,43,50,51,45,46,49,45,46,43,50,51,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,43,50,51,49,45,46,45,49,45,46,49,45,46,49,43,46,49,43,45,49,45,46,49,45,46,45,45,45,46,46,46,46,49,45,46,42,41,48,46,45,46,43,50,51,45,45,46,46,45,46,49,45,46,43,50,51,49,49,49,45,45,46,46,43,50,51,48,42,48,43,50,51,42,48,48,51,46,48,48,51,43,50,51,43,50,51,51,42,45,46,45,46,49,46,46,46,45,45,49,45,46,43,50,51,47,43,43,50,50,51,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,42,41,48,49,45,46,43,50,51,42,0,0,0,0,0,0,0,67,70,67,70,0,67,70,67,70,67,70,70,70,67,70,67,67,70,67,67,70,67,67,67,67,67,70,67,70,67,67,70,0,0,0,0,74,76,72,75,74,76,72,75,72,74,76,72,75,74,76,72,75,72,72,0,72,0,72,75,74,76,72,75,74,74,76,72,75,76,75,75,0,0,0,75,75,76,72,74,76,72,75,74,76,72,75,74,76,72,75,0,0,0,77,77,77,77,77,77,77,82,77,82,77,82,77,82,77,77,77,77,77,77,77,77,77,82,77,77,82,77,82,77,77,77,82,77,82,77,82,77,77,77,77,77,77,77,77,77,82,82,77,77,82,77,77,77,77,77,77,77,77,77,77,77,77,77,77,82,77,77,77,77,77,77,77,82,77,77,77,77,82,82,77,82,77,77,77,77,77,77,82,77,82,77,77,77,82,77,82,77],"f":"```````````````````````````{{}{{d{b}}}}{f{{d{h}}}}```````````````{{jl}j}{cn{}}00000000000{A`Ab}{ce{}{}}00000000000{jj}{{ce}h{}{}}{f{{d{Ad}}}}{{Aff}{{d{h}}}}78817{{}Af}{Ahb}{AhAj}{A`Aj}{Ad{{d{h}}}}{{AhAl}An}{{A`Al}An}{{AfAl}An}{{jAl}An}{cc{}}00000>>>>>>>{A`l}0{A`Ab}{f{{d{A`}}}}{Ad{{d{A`}}}}={{}j}{B`{{Bb{{d{Ah}}}}}}{f{{d{Ad}}}}{{jf}{{d{Ad}}}}3{Ahb}{A`Bd}{f{{d{{Bh{Bf}}}}}}{{Ad{Bj{Bf}}}{{d{Bl}}}}{{jl}j}{f{{d{B`}}}}{f{{d{b}}}}{{Afl}Af}{f{{d{h}}}}0{{ff}{{d{h}}}}{{AdBn}{{d{Ab}}}}{{AdAb}{{d{h}}}}{A`Ab}{ce{}{}}9{c{{C`{e}}}{}{}}00000000000{cCb{}}00000{{fc}{{d{h}}}{{Cd{{Bj{Bf}}}}}}=<```````````````````````````````````````````{cn{}}0000000000000{Cff}55555555555555{{{Ch{c}}}{{Bj{Bf}}}{}}{{{Ch{c}}}Bl{}}{BnBn}{CfCf}{{ce}h{}{}}0{CfCj}{{ClBl}h}{{{Ch{c}}Bl}hCn}{{D`Bl}h}{{BnBn}l}{{CfCf}l}{Cl{{C`{{Bj{Bf}}Cf}}}}{{{Ch{c}}}{{C`{{Bj{Bf}}Cf}}}Cn}{D`{{d{{Bj{Bf}}}}}}{Db{{C`{hCf}}}}{Dd{{d{h}}}}{Df{{d{h}}}}{{BnAl}{{C`{hDh}}}}{{CfAl}{{C`{hDh}}}}0{cc{}}000000{DjCf}{{{Ch{c}}}c{}}0{Cl{{C`{lCf}}}}{ce{}{}}0000002{DlD`}{DdDf}{c{{Ch{c}}}Cn}`{{Cn{Bj{Bf}}}{{C`{BlCf}}}}{{{Ch{c}}{Bj{Bf}}}{{C`{BlCf}}}Cn}{{Dl{Bj{Bf}}}{{d{Bl}}}}{{D`{Bj{Bf}}}{{d{Bl}}}}{{{Ch{c}}{Bj{Bf}}}{{C`{hCf}}}Cn}{{Cn{Bj{Bf}}}{{C`{hCf}}}}5{{Dlb}{{d{Bl}}}}{{D`b}{{d{Bl}}}}{{Clb}{{C`{BlCf}}}}{{{Ch{c}}{Bh{Bf}}}{{C`{BlCf}}}Cn}{{Cn{Bh{Bf}}}{{C`{BlCf}}}}{{{Ch{c}}b}{{C`{BlCf}}}Cn}{{Cnb}{{C`{BlCf}}}}{{D`Bf{Bh{Bf}}}{{d{Bl}}}}{{ClBf{Bh{Bf}}}{{C`{BlCf}}}}{Dn{{C`{hCf}}}}{{DnBn}{{C`{AbCf}}}}{{}Dl}{{}Dd}{Dn{{C`{AbCf}}}}{ce{}{}}0{cb{}}{c{{C`{e}}}{}{}}00000{Cj{{C`{Cf}}}}11111111{cCb{}}000000{{Db{Bj{Bf}}}{{C`{BlCf}}}}{{Dd{Bj{Bf}}}{{d{Bl}}}}{{Df{Bj{Bf}}}{{d{Bl}}}}{{Db{Bj{Bf}}}{{C`{hCf}}}}{{DbE`}{{C`{hCf}}}}````{{ClBl}h}{Cl{{C`{{Bj{Bf}}Cf}}}}{Db{{C`{hCf}}}}{Cl{{C`{lCf}}}}{{Cn{Bj{Bf}}}{{C`{BlCf}}}}{{Cn{Bj{Bf}}}{{C`{hCf}}}}1{{Clb}{{C`{BlCf}}}}{{Cn{Bh{Bf}}}{{C`{BlCf}}}}{{Cnb}{{C`{BlCf}}}}{{ClBf{Bh{Bf}}}{{C`{BlCf}}}}{Dn{{C`{hCf}}}}{{DnBn}{{C`{AbCf}}}}{Dn{{C`{AbCf}}}}{{Db{Bj{Bf}}}{{C`{BlCf}}}}?>``````````````````````{Eb{{d{{Eh{EdEf}}}}}}{cn{}}00000000000000000{{EjBl}{{Bb{Ej}}}}{{ElBl}{{Bb{El}}}}{{EjBl}Ej}{{ElBl}El}{c{{d{Eb}}}En}{c{{d{F`}}}En}{{EjEj}Ej}000{{ElEl}El}000{{EjEj}h}0{{ElEl}h}0333322221100{ce{}{}}00000000000000000{FbFb}{EjEj}{ElEl}{EfEf}{FdFd}{FfFf}{{ce}h{}{}}00000{{FbFb}Fh}{{EjEj}Fh}{{ElEl}Fh}{{EfEf}Fh}{{FdFd}Fh}{{FfFf}Fh}{c{{d{Ed}}}En}{{F`Ef}{{d{h}}}}{{FbEl}l}{{FbEj}l}{{FbFb}l}{{EjFb}l}{{EjEj}l}{{ElEl}l}{{ElFb}l}{{EfEf}l}{{FdFd}l}{{FfFf}l}{FfFj}{Ed{{d{h}}}}{{FbAl}{{C`{hDh}}}}0{{EjAl}{{C`{hDh}}}}0{{ElAl}{{C`{hDh}}}}0{{EfAl}{{C`{hDh}}}}0{{FdAl}{{C`{hDh}}}}0{{FfAl}{{C`{hDh}}}}0{{EjBl}{{Bb{Ej}}}}{{ElBl}{{Bb{El}}}}{{EjBl}Ej}{{ElBl}El}{cc{}}000{{{Fn{Fl}}}Fb}{{{Fn{Bf}}}Fb}{ElFb}{EjFb}2{FjEj}5{{{Fn{Bf}}}Ej}{{{Fn{Fl}}}El}7{G`El}{{{Fn{Bf}}}El}{{{Eh{cFl}}}Ef{{Gb{Fb}}}}{FdEf}{FfEf}<<<74{f{{C`{FbGd}}}}{f{{C`{EjGd}}}}{f{{C`{ElGd}}}}{f{{C`{EfGd}}}}{f{{C`{FdGd}}}}{f{{C`{FfGd}}}}{{Fbc}hGf}{{Ejc}hGf}{{Elc}hGf}{{Efc}hGf}{{Fdc}hGf}{{Ffc}hGf}{ce{}{}}00000000{EfFb}{FdEj}{FfEl}{Fbl}{Ejl}{Ell}12102102{Efl}13023213212221111321{Ed{{d{Ef}}}}{Eb{{d{Ef}}}}{F`{{d{Ef}}}}{El{{Bb{Gh}}}}{{BfBfBfBf}Ej}{{FlFlFlFlFlFlFlFl}El}{{FbFl}Ef}{{EjFl}Fd}{{ElFlFjFj}Ff}{EjEj}0{ElEl}0{Ej{{Fn{Bf}}}}{El{{Fn{Bf}}}}{{{Bj{Bf}}}{{C`{FbGd}}}}{{{Bj{Bf}}}{{C`{EjGd}}}}{{{Bj{Bf}}}{{C`{ElGd}}}}{{{Bj{Bf}}}{{C`{EfGd}}}}{{{Bj{Bf}}}{{C`{FdGd}}}}{{{Bj{Bf}}}{{C`{FfGd}}}}{{FbFb}{{Bb{Fh}}}}{{FbEl}{{Bb{Fh}}}}{{FbEj}{{Bb{Fh}}}}{{EjEj}{{Bb{Fh}}}}{{EjFb}{{Bb{Fh}}}}{{ElFb}{{Bb{Fh}}}}{{ElEl}{{Bb{Fh}}}}{{EfEf}{{Bb{Fh}}}}{{FdFd}{{Bb{Fh}}}}{{FfFf}{{Bb{Fh}}}}{{F`{Bj{Bf}}}{{d{{Eh{BlEf}}}}}}{Ed{{d{Ef}}}}{F`{{d{Ef}}}}{EfFl}{FdFl}{FfFl}{{Ed{Bj{Bf}}}{{d{Bl}}}}{{F`{Bj{Bf}}}{{d{Bl}}}}7{FfFj}{El{{Fn{Fl}}}}2{{F`{Bj{Bf}}c}{{d{Bl}}}En}{{FfFj}h}{{EfFb}h}{{FdEj}h}{{FfEl}h}{{EfFl}h}{{FdFl}h}{{FfFl}h}6{Ed{{d{h}}}}{{EjEj}{{Bb{Bl}}}}{{ElEl}{{Bb{Bl}}}}{EjFj}{ElG`}{FbFb}{ElFb}{El{{Bb{Ej}}}}0{EjEl}0{ce{}{}}00000{{{En{}{{Gj{c}}}}}{{d{c}}}{{Gn{}{{Gl{Ef}}}}}}{Ef{{d{{H`{Ef}}}}}}{Ef{{C`{{H`{Ef}}Hb}}}}{Fd{{d{{H`{Ef}}}}}}{Fd{{C`{{H`{Ef}}Hb}}}}{Ff{{C`{{H`{Ef}}Hb}}}}{cb{}}00000{c{{C`{e}}}{}{}}00000000000000000{cCb{}}00000000{{Ed{Bj{Bf}}}{{d{Bl}}}}``{CjHd}````{cn{}}000`<<<<{{}{{Hf{c}}}{HhHj}}{{{Hl{c}}}cHh}0{{{Hl{c}}}hHh}{{{Hf{c}}Al}An{HhHn}}{{{Hl{c}}Al}An{HhHn}}{{{Hf{c}}}hHh}{cc{}}0{{{Hf{c}}}cHh}{ce{}{}}0{{{Hf{c}}}c{}}{{{Hf{c}}}lHh}{{{Hf{c}}}{{Hl{c}}}Hh}{c{{Hf{c}}}{}}{c{{C`{e}}}{}{}}000{{{Hf{c}}}{{Bb{{Hl{c}}}}}Hh}{cCb{}}0````{cn{}}0000000{I`Ib}99999999{I`I`}{{ce}h{}{}}{{}Id}{{I`I`}l}{CjHd}{{I`Al}An}{{IfAl}An}{cc{}}000{IdI`}{ce{}{}}000{{{Ih{c}}}{{d{c}}}{}}{{Ifb}If}{{}If}{Ijh}{Ilh}{e{{Ih{c}}}In{{Jb{}{{J`{c}}}}In}}{{Ife}{{d{{Ih{c}}}}}In{{Jb{}{{J`{c}}}}In}}{{IfBl}If}{{{Ih{c}}}Id{}}9{c{{C`{e}}}{}{}}0000000{cCb{}}000{{}h}````````{{IjIj}Ij}{{JdIj}Jd}1{{JdIj}h}{{IjIj}h}{cn{}}000{IjG`}0{IjJf}{IjJh}2{IjAb}21{ce{}{}}0000{{JdIj}{{Bb{Jd}}}}{{IjIj}{{Bb{Ij}}}}{{IjFj}{{Bb{Ij}}}}021{JdJd}{IjIj}{{ce}h{}{}}0{{IjIj}Fh}{{}Ij}{{IjFj}Ij}{{IjFj}h}{{IjIj}Jf}{{IjIj}Jh}{{IjJf}Ij}{{IjJh}Ij}{{JdJd}Ij}{JdIj}{{IjIj}l}{{IjAl}{{C`{hDh}}}}{cc{}}{JjIj}1{JlIj}{AbIj}000000{JfIj}{JhIj}2{{Ijc}hGf}{ce{}{}}0{Ijl}{{IjFj}Ij}{{IjFj}h}{{IjJf}Ij}{{IjJh}Ij}{{AbFj}Ij}{{}Jd}{{IjIj}{{Bb{Fh}}}}{{IjIj}Ij}70{{JdIj}Jd}{{JdJd}Ij}2{{JdIj}h}{{IjIj}h}{IjFj}00{cIj{{Gn{}{{Gl{Ij}}}}}}0??{c{{C`{e}}}{}{}}0{Jf{{C`{IjJn}}}}{Jh{{C`{IjJn}}}}22{cCb{}}0","D":"CEl","p":[[5,"String",862],[8,"Result",149],[1,"str"],[1,"unit"],[5,"OpenOptions",29,863],[1,"bool"],[10,"Any",864],[5,"Metadata",29,863],[1,"u64"],[5,"File",29,863],[5,"DirBuilder",29,865],[5,"DirEntry",29,865],[8,"FileType",29,863],[5,"Formatter",866],[8,"Result",866],[5,"ReadDir",29,865],[6,"Option",867],[8,"Permissions",29,863],[1,"u8"],[5,"Vec",868],[1,"slice"],[1,"usize"],[6,"SeekFrom",149,869],[6,"Result",870],[5,"TypeId",864],[10,"AsRef",871],[6,"Error",149],[5,"BufReader",149,872],[1,"i32"],[10,"BufRead",149,869],[10,"Read",149,869],[5,"StdinLock",149,873],[10,"Write",149,869],[5,"Stdout",149,873],[5,"StdoutLock",149,873],[5,"Error",866],[5,"CapError",874],[5,"Stdin",149,873],[10,"Seek",149,869],[5,"Arguments",866],[5,"TcpListener",337,875],[5,"TcpStream",337,875],[6,"SocketAddr",337,876],[1,"tuple"],[5,"Ipv4Addr",337,877],[5,"Ipv6Addr",337,877],[10,"ToSocketAddrs",337,878],[5,"UdpSocket",337,879],[6,"IpAddr",337,877],[5,"SocketAddrV4",337,876],[5,"SocketAddrV6",337,876],[6,"Ordering",880],[1,"u32"],[1,"u16"],[1,"array"],[1,"u128"],[10,"Into",871],[5,"AddrParseError",881],[10,"Hasher",882],[6,"Ipv6MulticastScope",877],[17,"Iter"],[17,"Item"],[10,"Iterator",883],[5,"IntoIter",867],[5,"Error",884],[1,"never"],[5,"Mutex",666,885],[10,"Sized",886],[10,"Default",887],[5,"MutexGuard",666,885],[10,"Debug",866],[5,"ThreadId",702,888],[8,"NonZeroU64",889],[5,"Thread",702,888],[5,"Builder",702,888],[5,"JoinHandle",702,888],[5,"Duration",762,890],[8,"TimeValue",891],[10,"Send",886],[17,"Output"],[10,"FnOnce",892],[5,"Instant",762],[1,"f32"],[1,"f64"],[5,"Duration",893],[5,"Duration",893],[5,"TryFromFloatSecsError",890]],"r":[[0,894],[1,895],[2,894],[3,894],[4,895],[6,895],[8,894],[10,894],[11,894],[13,894],[18,894],[19,894],[20,894],[21,895],[25,895],[26,895],[32,865],[33,865],[35,863],[37,863],[38,863],[39,863],[40,863],[41,865],[154,869],[155,872],[175,869],[178,869],[179,869],[181,873],[182,873],[183,873],[184,873],[190,869],[264,869],[283,873],[284,873],[316,869],[317,869],[318,869],[319,869],[340,877],[341,877],[342,877],[346,876],[347,876],[348,876],[349,875],[350,875],[351,878],[354,879],[666,896],[667,885],[668,885],[669,896],[674,897],[702,888],[703,888],[704,888],[705,888],[725,888],[744,888],[762,890]],"b":[[240,"impl-Display-for-AxError"],[241,"impl-Debug-for-AxError"],[384,"impl-BitAnd-for-Ipv4Addr"],[385,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[386,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[387,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[388,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[389,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[390,"impl-BitAnd-for-Ipv6Addr"],[391,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[392,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[393,"impl-BitAndAssign-for-Ipv4Addr"],[394,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[395,"impl-BitAndAssign-for-Ipv6Addr"],[396,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[397,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[398,"impl-BitOr-for-Ipv4Addr"],[399,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[400,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[401,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[402,"impl-BitOr-for-Ipv6Addr"],[403,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[404,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[405,"impl-BitOrAssign-for-Ipv4Addr"],[406,"impl-BitOrAssign-for-Ipv6Addr"],[407,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[446,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[447,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[448,"impl-PartialEq-for-IpAddr"],[449,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[450,"impl-PartialEq-for-Ipv4Addr"],[451,"impl-PartialEq-for-Ipv6Addr"],[452,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[458,"impl-Debug-for-IpAddr"],[459,"impl-Display-for-IpAddr"],[460,"impl-Debug-for-Ipv4Addr"],[461,"impl-Display-for-Ipv4Addr"],[462,"impl-Debug-for-Ipv6Addr"],[463,"impl-Display-for-Ipv6Addr"],[464,"impl-Debug-for-SocketAddr"],[465,"impl-Display-for-SocketAddr"],[466,"impl-Display-for-SocketAddrV4"],[467,"impl-Debug-for-SocketAddrV4"],[468,"impl-Display-for-SocketAddrV6"],[469,"impl-Debug-for-SocketAddrV6"],[478,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[479,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[480,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[481,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[482,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[483,"impl-From%3Cu32%3E-for-Ipv4Addr"],[485,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[486,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[488,"impl-From%3Cu128%3E-for-Ipv6Addr"],[489,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[490,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[491,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[492,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[563,"impl-Not-for-%26Ipv4Addr"],[564,"impl-Not-for-Ipv4Addr"],[565,"impl-Not-for-%26Ipv6Addr"],[566,"impl-Not-for-Ipv6Addr"],[575,"impl-PartialOrd-for-IpAddr"],[576,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[577,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[578,"impl-PartialOrd-for-Ipv4Addr"],[579,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[580,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[581,"impl-PartialOrd-for-Ipv6Addr"],[624,"impl-ToSocketAddrs-for-SocketAddr"],[625,"impl-ToSocketAddrs-for-SocketAddr"],[626,"impl-ToSocketAddrs-for-SocketAddrV4"],[627,"impl-ToSocketAddrs-for-SocketAddrV4"],[815,"impl-From%3CDuration%3E-for-Duration"],[817,"impl-From%3CDuration%3E-for-Duration"],[842,"impl-Sub%3CDuration%3E-for-Instant"],[843,"impl-Sub-for-Instant"],[850,"impl-Sum-for-Duration"],[851,"impl-Sum%3C%26Duration%3E-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALABQwABAAQABwAAAAkAAAALAAEADgAAABMAAwAaAAEALgALADsADQBQAAAAVAAEAGUAAABtAAAAdAAAAHwAAAB/AAAAgQARAJQAAADBAA0A0AANAOAAAwDmAAMA6wABAO4ABAD6AAAACwEDABIBAAAUAQAAFgEAABgBAAAfARgAOQEBAGkBFQCBATsAvwEJAMoBEADzAQsANAIDAEACCQBQAgAAYAIBAGoCBQBxAiYAmQIAAJsCAACeAgwArAIBALgCAwC9AgEAwwIHAMwCCQDXAgAA2QIBAO0CDAAFAwYAFAMEAB8DBwAtAwEAMAMAADIDAAA9AwAAQQMBAEcDAABLAwAATQMCAFMDBQBbAwMA","a":{"in6addr_any":[353],"in6addr_any_init":[353],"in6addr_loopback":[345],"in6addr_loopback_init":[345],"inaddr_any":[352]}}],\
["axsync",{"t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNN","n":["Completion","Mutex","MutexGuard","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","complete","complete_all","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","from","get_mut","into","into","into","into_inner","is_locked","lock","new","new","reinit","spin","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","wait_for_completion","wait_for_completion_timeout"],"q":[[0,"axsync"],[44,"axsync::completion"],[45,"axsync::mutex"],[46,"core::marker"],[47,"core::default"],[48,"core::fmt"],[49,"core::result"],[50,"core::option"],[51,"core::any"]],"i":[0,0,0,3,6,1,3,6,1,1,1,3,6,6,6,3,6,3,3,6,1,3,3,6,1,3,3,3,3,1,1,0,3,6,1,3,6,1,3,3,6,1,1,1],"f":"```{ce{}{}}00000{bd}0{{}{{f{c}}}{hj}}{{{l{c}}}ch}0{{{l{c}}}dh}{{{f{c}}n}A`{hAb}}{{{l{c}}n}A`{hAb}}{{{f{c}}}dh}{cc{}}00{{{f{c}}}ch}999{{{f{c}}}c{}}{{{f{c}}}Adh}{{{f{c}}}{{l{c}}}h}{c{{f{c}}}{}}{{}b}=`{c{{Af{e}}}{}{}}00000{{{f{c}}}{{Ah{{l{c}}}}}h}{cAj{}}00{bd}{{bAl}Ad}","D":"C`","p":[[5,"Completion",0,44],[1,"unit"],[5,"Mutex",0,45],[10,"Sized",46],[10,"Default",47],[5,"MutexGuard",0,45],[5,"Formatter",48],[8,"Result",48],[10,"Debug",48],[1,"bool"],[6,"Result",49],[6,"Option",50],[5,"TypeId",51],[1,"u64"]],"r":[[0,44],[1,45],[2,45]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQABQAEAAUADAACABAAAQAgAAYAKAACAA=="}],\
["axtask",{"t":"IPPFPSFPPPPPPPPGFFGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHQNNNHHNNNHNNNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNHNNNNNNHONONHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNHHHH","n":["AxTaskRef","Blocked","Blocking","CurrentTask","Exited","MAX_RT_PRIO","Processor","Runable","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RR","SCHED_UNKNOWN","SchedPolicy","SchedStatus","TaskId","TaskState","WaitQueue","WaitTaskList","WaitTaskNode","as_task_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_all","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current","current_check_preempt_pending","current_may_uninit","current_processor","declare_wait","default","deref","deref","dump_curr_backtrace","dump_task_backtrace","eq","eq","eq","exit","first_add_task","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_links","idle_task","init_scheduler","init_scheduler_secondary","inner","into","into","into","into","into","into","into","into","into","join","new","new","new","new","new","new_task","notify_all","notify_all","notify_one","notify_one","notify_task","notify_task","on_timer_tick","policy","prepare_to_wait","priority","remove","run_idle","schedule","schedule_timeout","set_priority","sleep","sleep","sleep_until","sleep_until","spawn","spawn_raw","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vfork_suspend","wait","wait_timeout","wait_timeout_until","wait_until","wake_vfork_process","wakeup_task","yield_now","yield_now"],"q":[[0,"axtask"],[161,"axtask::task"],[162,"axtask::api"],[163,"taskctx::task"],[164,"core::option"],[165,"axtask::processor"],[166,"axtask::wait_list"],[167,"core::fmt"],[168,"core::result"],[169,"linked_list::raw_list"],[170,"axtask::wait_queue"],[171,"alloc::string"],[172,"core::ops::function"],[173,"core::marker"],[174,"alloc::sync"],[175,"axhal::time"],[176,"core::time"],[177,"core::any"],[178,"axtask::schedule"]],"i":[0,7,7,0,7,0,0,7,6,6,6,6,6,6,6,0,0,0,0,0,0,0,1,3,10,1,11,21,22,3,6,7,8,10,1,11,21,22,3,6,7,8,10,3,3,6,7,8,3,6,7,8,0,0,0,0,0,3,1,11,0,0,3,6,7,0,10,3,7,10,1,11,21,22,3,6,6,7,8,11,10,0,0,11,10,1,11,21,22,3,6,7,8,0,10,11,21,22,3,0,21,22,21,22,21,22,0,8,21,8,21,0,0,0,0,0,0,0,0,0,0,3,6,7,8,10,1,11,21,22,3,6,7,8,10,1,11,21,22,3,6,7,8,10,1,11,21,22,3,6,7,8,0,22,22,22,22,0,0,0,0],"f":"``````````````````````{bd}{fh}{ce{}{}}00000000000000000{{}j}0{ff}{ll}{nn}{A`A`}{{ce}j{}{}}000{{}b}6{{}{{Ab{b}}}}{{}Ad}`{{}f}{bc{}}{Afc{}};{dj}{{ff}Ah}{{ll}Ah}{{nn}Ah}{AjAl}4{{fAn}{{Bb{jB`}}}}{{nAn}Bd}{cc{}}00000{Bfl}111{Af{{Bh{Af}}}}{Add}{{}j}0{Afd}{ce{}{}}00000000{d{{Ab{Aj}}}}{dAd}{dAf}{{}Bj}{{}Bl}{{}f}{{cBnBfhBf}d{C`Cb}}{Bjj}{Blj}{BjAh}{BlAh}{{Bjd}Ah}{{Bld}Ah}?`{{Bj{Cd{Af}}}j}`{{Bj{Cd{Af}}}{{Ab{{Cd{Af}}}}}}{{}Al}{{}j}{CfAh}{ChAh}{Cjj}0{Cfj}0{cd{C`Cb}}{{cBnBf}d{C`Cb}}{ce{}{}}000{c{{Bb{e}}}{}{}}00000000000000000{cCl{}}00000000{dj}{Blj}{{BlCj}Ah}{{BlCjc}Ah{{D`{}{{Cn{Ah}}}}}}{{Blc}j{{D`{}{{Cn{Ah}}}}}}44>>","D":"Kd","p":[[5,"CurrentTask",0,161],[8,"AxTaskRef",0,162],[5,"TaskId",0,163],[1,"u64"],[1,"unit"],[6,"SchedPolicy",0,163],[6,"TaskState",0,161],[5,"SchedStatus",0,163],[6,"Option",164],[5,"Processor",0,165],[5,"WaitTaskNode",0,166],[1,"bool"],[1,"i32"],[1,"never"],[5,"Formatter",167],[5,"Error",167],[6,"Result",168],[8,"Result",167],[1,"usize"],[5,"Links",169],[5,"WaitTaskList",0,166],[5,"WaitQueue",0,170],[5,"String",171],[10,"FnOnce",172],[10,"Send",173],[5,"Arc",174],[8,"TimeValue",175],[1,"isize"],[5,"Duration",176],[5,"TypeId",177],[17,"Output"],[10,"Fn",172]],"r":[[0,162],[3,161],[5,163],[6,165],[15,163],[16,163],[17,163],[18,161],[19,170],[20,166],[21,166],[52,162],[53,162],[54,162],[55,165],[60,162],[61,162],[65,162],[81,162],[82,162],[93,162],[99,161],[106,162],[111,162],[112,178],[113,178],[114,162],[115,162],[116,162],[117,162],[118,162],[119,162],[120,162],[152,162],[157,162],[158,162],[159,162],[160,162]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEcACwACAAEABQABAAgAAAAZABEALQAHADoAAgA/AAIARAABAEwAAABQAAAAegAeAA=="}],\
["axtrap",{"t":"H","n":["init_interrupt"],"q":[[0,"axtrap"],[1,"axtrap::arch::x86_64"]],"i":[0],"f":"{{}b}","D":"d","p":[[1,"unit"]],"r":[[0,1]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["linux_syscall_api",{"t":"TTTTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPPFIFTTTPFTTIITTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNHNNNHNHNNNNNNNNNNNCNNNNNNNNNNNNNNTTFTTTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNN","n":["BINARY","CLOEXEC","CREATE","DIR","DSYNC","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EXCLUSIVE","EXDEV","EXFULL","Err","File","FileFlags","FilePath","NOCTTY","NOFOLLOW","NON_BLOCK","Ok","OpenFlags","RDONLY","RDWR","SyscallError","SyscallResult","TEXT","TRUNC","WRONLY","all","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","creatable","create","create_link","create_new","default","difference","dir","empty","end_with","eq","equal_to","equivalent","executable","executable","extend","file","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_attr","init_current_dir","insert","intersection","intersects","into","into","into","into_iter","is_all","is_close_on_exec","is_dir","is_dir","is_empty","is_file","is_root","iter","iter_names","metadata","new","new_creatable","new_file","not","open","options","partial_cmp","path","read","read_file","read_write","readable","readable","recycle_user_process","remove","run_testcase","seek","set","set_len","start_with","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","trap","truncate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","writable","writable","write","DEVICE","EXECUTE","MappingFlags","READ","UNCACHED","USER","VirtAddr","WRITE","add","add_assign","align_down","align_down_4k","align_offset","align_offset_4k","align_up","align_up_4k","all","as_any","as_any","as_any_mut","as_any_mut","as_mut_ptr","as_ptr","as_usize","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","handle_irq","handle_page_fault","handle_signals","handle_syscall","insert","intersection","intersects","into","into","into_iter","is_aligned","is_aligned_4k","is_all","is_empty","iter","iter_names","not","partial_cmp","record_trap","remove","set","sub","sub","sub_assign","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union"],"q":[[0,"linux_syscall_api"],[277,"linux_syscall_api::trap"],[384,"axfs::api::port"],[385,"core::any"],[386,"axfs::api::file"],[387,"axprocess::link"],[388,"core::cmp"],[389,"axerrno"],[390,"core::result"],[391,"core::iter::traits::collect"],[392,"core::fmt"],[393,"core::option"],[394,"axfs_vfs::structs"],[395,"bitflags::iter"],[396,"alloc::string"],[397,"alloc::vec"],[398,"axio"],[399,"memory_addr"],[400,"core::convert"],[401,"page_table_entry"],[402,"page_table_entry::arch::riscv"],[403,"page_table_entry::arch::aarch64"],[404,"x86_64::structures::paging::page_table"],[405,"axhal::mem"],[406,"linux_syscall_api::api"],[407,"linux_syscall_api::syscall_fs"]],"i":[1,1,1,1,1,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,1,41,41,42,0,0,0,1,1,1,42,0,1,1,0,0,1,1,1,1,5,1,6,5,1,6,1,1,1,1,1,1,1,1,5,1,6,5,1,6,5,1,6,5,1,6,6,1,1,1,5,0,5,1,1,6,1,6,6,6,6,5,5,1,6,5,1,1,1,1,1,6,5,1,1,6,1,1,1,1,1,1,5,0,1,1,1,5,1,6,1,1,1,1,6,1,6,6,1,1,5,6,1,0,1,5,5,6,6,5,0,1,5,1,0,1,0,5,1,5,6,1,1,1,5,1,6,1,0,5,5,1,6,5,1,6,5,1,6,1,5,1,5,34,34,0,34,34,34,0,34,32,32,32,32,32,32,32,32,34,32,34,32,34,32,32,32,34,34,34,34,34,34,34,34,32,34,32,34,32,34,32,34,32,34,34,32,34,34,32,32,34,32,32,32,34,34,34,34,34,32,32,32,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,34,34,34,32,34,34,32,32,34,34,34,34,34,32,0,34,34,32,34,32,34,34,32,34,34,32,34,32,34,32,34,34],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}b}{cd{}}00000{{bb}b}{{bb}f}10{bh}021{ce{}{}}00000{jj}{bb}{ll}{{ce}f{}{}}00{{ll}n}3{{bb}A`}{bA`}{Ab{{Af{jAd}}}}{{ll}A`}1><{l{{Af{AbAd}}}}?111{{ce}A`{}{}}{jA`}0{{bc}f{{Aj{}{{Ah{b}}}}}}3{j{{Af{fAd}}}}{{bAl}{{Af{fAn}}}}0000{{lAl}{{Af{fAn}}}}{cc{}}{B`b}11{h{{Bb{b}}}}{hb}00{cb{{Aj{}{{Ah{b}}}}}}{Ab{{Bb{b}}}}{j{{Af{BdAd}}}}{{}f}{{bb}f}{{bb}b}{{bb}A`}{ce{}{}}00{b}{bA`}00{lA`}100{b{{Bf{b}}}}{b{{Bh{b}}}}{j{{Af{BjAd}}}}{Ab{{Af{lAd}}}}5{{Abb}{{Bl{j}}}}{bb}{Ab{{Af{jAd}}}}{{}Bn}{{ll}{{Bb{n}}}}{lAb}{{j{Cb{C`}}}{{Af{B`Ad}}}}{Ab{{Bb{Cd}}}}{b{{Cf{A`A`}}}}{jA`}?{{}f}{{bb}f}{{Ab{Ch{Cd}}}{{Bl{f}}}}{{jCj}{{Af{ClAd}}}}{{bbA`}f}{{jCl}{{Af{fAd}}}}{{ll}A`}{{bb}b}60{ce{}{}}007`{{jB`}{{Af{fAd}}}}{c{{Af{e}}}{}{}}00000{cCn{}}004<{bA`}{{j{Cb{C`}}}{{Af{B`Ad}}}}````````{{D`B`}D`}{{D`B`}f}{{D`c}D`{{Db{B`}}}}{D`D`}{{D`c}B`{{Db{B`}}}}{D`B`}32{{}Dd}{cd{}}000{D`C`}03{{DdDd}Dd}{{DdDd}f}10{DdB`}021{ce{}{}}0009{DdDd}{{ce}f{}{}}0{{D`D`}n}2{{DdDd}A`}{{}D`}8;{{D`D`}A`}{{ce}A`{}{}}{{Ddc}f{{Aj{}{{Ah{Dd}}}}}}{{D`Al}{{Af{fAn}}}}00{{DdAl}{{Af{fAn}}}}0000{B`D`}{cc{}}10{DfDd}{DhDd}{DjDd}{DlDd}{B`{{Bb{Dd}}}}{B`Dd}00{cDd{{Aj{}{{Ah{Dd}}}}}}{Ab{{Bb{Dd}}}}{{B`A`}f}{{D`Dd}f}{{}f}{{B`{Dn{B`}}}E`}{{DdDd}f}{{DdDd}Dd}{{DdDd}A`}{ce{}{}}0{Dd}{{D`c}A`{{Db{B`}}}}{D`A`}{DdA`}0{Dd{{Bf{Dd}}}}{Dd{{Bh{Dd}}}}{DdDd}{{D`D`}{{Bb{n}}}}{B`f}<{{DdDdA`}f}{{D`B`}D`}={{D`B`}f}?><<?{c{{Af{e}}}{}{}}000{cCn{}}0{{DdDd}Dd}","D":"BD`","p":[[5,"OpenFlags",0,384],[10,"Any",385],[1,"unit"],[1,"u32"],[5,"File",0,386],[5,"FilePath",0,387],[6,"Ordering",388],[1,"bool"],[1,"str"],[6,"AxError",389],[6,"Result",390],[17,"Item"],[10,"IntoIterator",391],[5,"Formatter",392],[5,"Error",392],[1,"usize"],[6,"Option",393],[5,"VfsNodeAttr",394],[5,"Iter",395],[5,"IterNames",395],[5,"Metadata",386],[8,"AxResult",389],[5,"OpenOptions",386],[1,"u8"],[1,"slice"],[5,"String",396],[1,"tuple"],[5,"Vec",397],[6,"SeekFrom",398],[1,"u64"],[5,"TypeId",385],[5,"VirtAddr",277,399],[10,"Into",400],[5,"MappingFlags",277,401],[5,"PTEFlags",402],[5,"DescriptorAttr",403],[5,"PageTableFlags",404],[5,"MemRegionFlags",405],[1,"array"],[1,"isize"],[8,"SyscallError",0],[8,"SyscallResult",0]],"r":[[138,386],[139,406],[140,387],[145,384],[185,387],[217,406],[237,407],[244,406],[248,406],[250,406],[279,401],[283,399]],"b":[[164,"impl-Flags-for-OpenFlags"],[165,"impl-OpenFlags"],[195,"impl-FileExt-for-File"],[196,"impl-File"],[200,"impl-Octal-for-OpenFlags"],[201,"impl-Debug-for-OpenFlags"],[202,"impl-LowerHex-for-OpenFlags"],[203,"impl-UpperHex-for-OpenFlags"],[204,"impl-Binary-for-OpenFlags"],[211,"impl-Flags-for-OpenFlags"],[212,"impl-OpenFlags"],[305,"impl-Flags-for-MappingFlags"],[306,"impl-MappingFlags"],[326,"impl-Debug-for-VirtAddr"],[327,"impl-UpperHex-for-VirtAddr"],[328,"impl-LowerHex-for-VirtAddr"],[329,"impl-UpperHex-for-MappingFlags"],[330,"impl-Binary-for-MappingFlags"],[331,"impl-Octal-for-MappingFlags"],[332,"impl-Debug-for-MappingFlags"],[333,"impl-LowerHex-for-MappingFlags"],[334,"impl-From%3Cusize%3E-for-VirtAddr"],[336,"impl-VirtAddr"],[338,"impl-From%3CPTEFlags%3E-for-MappingFlags"],[339,"impl-From%3CDescriptorAttr%3E-for-MappingFlags"],[340,"impl-From%3CPageTableFlags%3E-for-MappingFlags"],[341,"impl-From%3CMemRegionFlags%3E-for-MappingFlags"],[343,"impl-Flags-for-MappingFlags"],[344,"impl-MappingFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGAAIQCbAAUApQAAAKkADAC8AAAAwQAAAMMAAQDIAAYA0AAAANQAAADhAAAA8gAAAPQAAAD3AAAA/AAAAAMBAgAJAQgAEwEAABUBAAAeAQEAJwEDADIBAAA2AQgAQQEAAEQBAQBHAQgAUwEDAFgBAABmAQAAbgEAAHIBAAB0AQAAdwEBAHoBBQA="}],\
["monolithic_userboot",{"t":"CHSSSSSSSSH","n":["batch","main","BUSYBOX_TESTCASES","CYCLE_TESTCASES","IOZONE_TESTCASES","LIBC_TESTCASES","LMBENCH_TESTCASES","NET_TESTCASES","OTHER_TESTCASES","UNIX_TESTCASES","run_batch_testcases"],"q":[[0,"monolithic_userboot"],[2,"monolithic_userboot::batch"]],"i":[0,0,0,0,0,0,0,0,0,0,0],"f":"`{{}b}````````0","D":"f","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAgACAAcACwAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
