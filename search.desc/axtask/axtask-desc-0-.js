searchState.loadedDescShard("axtask", 0, "ArceOS task management module.\nThe reference type of a task.\nA wrapper of <code>AxTaskRef</code> as the current task.\nProcessor on coresponding core\nThe batch scheduler\nThe deadline scheduler\nThe first-in, first-out scheduler\nThe idle task scheduler\nThe default time-sharing scheduler\nThe round-robin scheduler\nUnknown scheduler\nThe policy of the scheduler\nThe status of the scheduler\nA unique identifier for a thread.\nThe possible states of a task.\nA queue to store tasks that are waiting for some …\nA simple FIFO wait task list\nA task wrapper.\nConverts <code>CurrentTask</code> to <code>AxTaskRef</code>.\nConvert the task ID to a <code>u64</code>.\nProcessor Clean all\n清空计数器，为了给单元测试使用 保留了gc, …\nGets the current task.\nChecks if the current task should be preempted. This api …\nGets the current task, or returns <code>None</code> if the current task …\nGet current processor pointer\nA queue to store sleeping tasks.\nDump the current task backtrace.\nDump the given task backtrace.\nExits the current task.\nFirst add task to processor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe idle task of the processor\nInitializes the task scheduler (for the primary CPU).\nInitializes the task scheduler for secondary CPUs.\nReturns a reference to the inner task struct.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent task is going to sleep, it will be woken up when …\nCreate a new processor\nCreates a new FifoTask from the inner task struct.\nCreates a new empty WaitList.\nCreates an empty wait queue.\nCreate a new task ID.\nCreate a new task.\nnotify all task and remove it\nWakes all tasks in the wait queue.\nnotify first task and remove it\nWakes up one task in the wait queue, usually the first one.\nnotify special task and remove it\nWake up the given task in the wait queue.\nHandles periodic timer ticks for the task manager.\nThe policy of the scheduler\nadd wait to list back\nThe priority of the scheduler policy\nRemoves the given Node\nThe idle task routine.\nSchedule the next task to run.\nSleep the current task until the deadline.\nSet the priority for current task.\nCurrent task is going to sleep for the given duration.\nCurrent task is going to sleep for the given duration.\nCurrent task is going to sleep, it will be woken up at the …\nCurrent task is going to sleep, it will be woken up at the …\nSpawns a new task with the default parameters.\nSpawns a new task with the given parameters.\nCurrent task is going to sleep. It will be woken up when …\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nTo wake up the task that is blocked because vfork out of …\nwake up task\nCurrent task gives up the CPU time voluntarily, and …\nCurrent task gives up the CPU time voluntarily, and …")